// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Im.Group.proto

#ifndef PROTOBUF_Im_2eGroup_2eproto__INCLUDED
#define PROTOBUF_Im_2eGroup_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Im.Base.pb.h"
// @@protoc_insertion_point(includes)

namespace Im {
namespace Group {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Im_2eGroup_2eproto();
void protobuf_AssignDesc_Im_2eGroup_2eproto();
void protobuf_ShutdownFile_Im_2eGroup_2eproto();

class NormalGroupListRequest;
class NormalGroupListResponse;
class GroupInfoListRequest;
class GroupInfoListResponse;
class GroupCreateRequest;
class GroupCreateResponse;
class GroupChangeMemberRequest;
class GroupChangeMemberResponse;
class GroupShieldRequest;
class GroupShieldResponse;
class GroupChangeMemberNotify;

// ===================================================================

class NormalGroupListRequest : public ::google::protobuf::Message {
 public:
  NormalGroupListRequest();
  virtual ~NormalGroupListRequest();

  NormalGroupListRequest(const NormalGroupListRequest& from);

  inline NormalGroupListRequest& operator=(const NormalGroupListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NormalGroupListRequest& default_instance();

  void Swap(NormalGroupListRequest* other);

  // implements Message ----------------------------------------------

  NormalGroupListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NormalGroupListRequest& from);
  void MergeFrom(const NormalGroupListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // optional bytes attach_data = 2;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 2;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:Im.Group.NormalGroupListRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* attach_data_;
  ::google::protobuf::uint32 user_id_;
  friend void  protobuf_AddDesc_Im_2eGroup_2eproto();
  friend void protobuf_AssignDesc_Im_2eGroup_2eproto();
  friend void protobuf_ShutdownFile_Im_2eGroup_2eproto();

  void InitAsDefaultInstance();
  static NormalGroupListRequest* default_instance_;
};
// -------------------------------------------------------------------

class NormalGroupListResponse : public ::google::protobuf::Message {
 public:
  NormalGroupListResponse();
  virtual ~NormalGroupListResponse();

  NormalGroupListResponse(const NormalGroupListResponse& from);

  inline NormalGroupListResponse& operator=(const NormalGroupListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const NormalGroupListResponse& default_instance();

  void Swap(NormalGroupListResponse* other);

  // implements Message ----------------------------------------------

  NormalGroupListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const NormalGroupListResponse& from);
  void MergeFrom(const NormalGroupListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // repeated .Im.Base.GroupVersionInfo group_version_list = 2;
  inline int group_version_list_size() const;
  inline void clear_group_version_list();
  static const int kGroupVersionListFieldNumber = 2;
  inline const ::Im::Base::GroupVersionInfo& group_version_list(int index) const;
  inline ::Im::Base::GroupVersionInfo* mutable_group_version_list(int index);
  inline ::Im::Base::GroupVersionInfo* add_group_version_list();
  inline const ::google::protobuf::RepeatedPtrField< ::Im::Base::GroupVersionInfo >&
      group_version_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::Im::Base::GroupVersionInfo >*
      mutable_group_version_list();

  // optional bytes attach_data = 3;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 3;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:Im.Group.NormalGroupListResponse)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Im::Base::GroupVersionInfo > group_version_list_;
  ::std::string* attach_data_;
  ::google::protobuf::uint32 user_id_;
  friend void  protobuf_AddDesc_Im_2eGroup_2eproto();
  friend void protobuf_AssignDesc_Im_2eGroup_2eproto();
  friend void protobuf_ShutdownFile_Im_2eGroup_2eproto();

  void InitAsDefaultInstance();
  static NormalGroupListResponse* default_instance_;
};
// -------------------------------------------------------------------

class GroupInfoListRequest : public ::google::protobuf::Message {
 public:
  GroupInfoListRequest();
  virtual ~GroupInfoListRequest();

  GroupInfoListRequest(const GroupInfoListRequest& from);

  inline GroupInfoListRequest& operator=(const GroupInfoListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupInfoListRequest& default_instance();

  void Swap(GroupInfoListRequest* other);

  // implements Message ----------------------------------------------

  GroupInfoListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GroupInfoListRequest& from);
  void MergeFrom(const GroupInfoListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // repeated .Im.Base.GroupVersionInfo group_version_list = 2;
  inline int group_version_list_size() const;
  inline void clear_group_version_list();
  static const int kGroupVersionListFieldNumber = 2;
  inline const ::Im::Base::GroupVersionInfo& group_version_list(int index) const;
  inline ::Im::Base::GroupVersionInfo* mutable_group_version_list(int index);
  inline ::Im::Base::GroupVersionInfo* add_group_version_list();
  inline const ::google::protobuf::RepeatedPtrField< ::Im::Base::GroupVersionInfo >&
      group_version_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::Im::Base::GroupVersionInfo >*
      mutable_group_version_list();

  // optional bytes attach_data = 3;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 3;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:Im.Group.GroupInfoListRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Im::Base::GroupVersionInfo > group_version_list_;
  ::std::string* attach_data_;
  ::google::protobuf::uint32 user_id_;
  friend void  protobuf_AddDesc_Im_2eGroup_2eproto();
  friend void protobuf_AssignDesc_Im_2eGroup_2eproto();
  friend void protobuf_ShutdownFile_Im_2eGroup_2eproto();

  void InitAsDefaultInstance();
  static GroupInfoListRequest* default_instance_;
};
// -------------------------------------------------------------------

class GroupInfoListResponse : public ::google::protobuf::Message {
 public:
  GroupInfoListResponse();
  virtual ~GroupInfoListResponse();

  GroupInfoListResponse(const GroupInfoListResponse& from);

  inline GroupInfoListResponse& operator=(const GroupInfoListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupInfoListResponse& default_instance();

  void Swap(GroupInfoListResponse* other);

  // implements Message ----------------------------------------------

  GroupInfoListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GroupInfoListResponse& from);
  void MergeFrom(const GroupInfoListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // repeated .Im.Base.GroupInfo group_info_list = 2;
  inline int group_info_list_size() const;
  inline void clear_group_info_list();
  static const int kGroupInfoListFieldNumber = 2;
  inline const ::Im::Base::GroupInfo& group_info_list(int index) const;
  inline ::Im::Base::GroupInfo* mutable_group_info_list(int index);
  inline ::Im::Base::GroupInfo* add_group_info_list();
  inline const ::google::protobuf::RepeatedPtrField< ::Im::Base::GroupInfo >&
      group_info_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::Im::Base::GroupInfo >*
      mutable_group_info_list();

  // optional bytes attach_data = 3;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 3;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:Im.Group.GroupInfoListResponse)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Im::Base::GroupInfo > group_info_list_;
  ::std::string* attach_data_;
  ::google::protobuf::uint32 user_id_;
  friend void  protobuf_AddDesc_Im_2eGroup_2eproto();
  friend void protobuf_AssignDesc_Im_2eGroup_2eproto();
  friend void protobuf_ShutdownFile_Im_2eGroup_2eproto();

  void InitAsDefaultInstance();
  static GroupInfoListResponse* default_instance_;
};
// -------------------------------------------------------------------

class GroupCreateRequest : public ::google::protobuf::Message {
 public:
  GroupCreateRequest();
  virtual ~GroupCreateRequest();

  GroupCreateRequest(const GroupCreateRequest& from);

  inline GroupCreateRequest& operator=(const GroupCreateRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupCreateRequest& default_instance();

  void Swap(GroupCreateRequest* other);

  // implements Message ----------------------------------------------

  GroupCreateRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GroupCreateRequest& from);
  void MergeFrom(const GroupCreateRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required .Im.Base.GroupType group_type = 2;
  inline bool has_group_type() const;
  inline void clear_group_type();
  static const int kGroupTypeFieldNumber = 2;
  inline ::Im::Base::GroupType group_type() const;
  inline void set_group_type(::Im::Base::GroupType value);

  // required string group_name = 3;
  inline bool has_group_name() const;
  inline void clear_group_name();
  static const int kGroupNameFieldNumber = 3;
  inline const ::std::string& group_name() const;
  inline void set_group_name(const ::std::string& value);
  inline void set_group_name(const char* value);
  inline void set_group_name(const char* value, size_t size);
  inline ::std::string* mutable_group_name();
  inline ::std::string* release_group_name();
  inline void set_allocated_group_name(::std::string* group_name);

  // required string group_avatar = 4;
  inline bool has_group_avatar() const;
  inline void clear_group_avatar();
  static const int kGroupAvatarFieldNumber = 4;
  inline const ::std::string& group_avatar() const;
  inline void set_group_avatar(const ::std::string& value);
  inline void set_group_avatar(const char* value);
  inline void set_group_avatar(const char* value, size_t size);
  inline ::std::string* mutable_group_avatar();
  inline ::std::string* release_group_avatar();
  inline void set_allocated_group_avatar(::std::string* group_avatar);

  // repeated uint32 group_member_id_list = 5;
  inline int group_member_id_list_size() const;
  inline void clear_group_member_id_list();
  static const int kGroupMemberIdListFieldNumber = 5;
  inline ::google::protobuf::uint32 group_member_id_list(int index) const;
  inline void set_group_member_id_list(int index, ::google::protobuf::uint32 value);
  inline void add_group_member_id_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      group_member_id_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_group_member_id_list();

  // optional bytes attach_data = 6;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 6;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:Im.Group.GroupCreateRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_type();
  inline void clear_has_group_type();
  inline void set_has_group_name();
  inline void clear_has_group_name();
  inline void set_has_group_avatar();
  inline void clear_has_group_avatar();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 user_id_;
  int group_type_;
  ::std::string* group_name_;
  ::std::string* group_avatar_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > group_member_id_list_;
  ::std::string* attach_data_;
  friend void  protobuf_AddDesc_Im_2eGroup_2eproto();
  friend void protobuf_AssignDesc_Im_2eGroup_2eproto();
  friend void protobuf_ShutdownFile_Im_2eGroup_2eproto();

  void InitAsDefaultInstance();
  static GroupCreateRequest* default_instance_;
};
// -------------------------------------------------------------------

class GroupCreateResponse : public ::google::protobuf::Message {
 public:
  GroupCreateResponse();
  virtual ~GroupCreateResponse();

  GroupCreateResponse(const GroupCreateResponse& from);

  inline GroupCreateResponse& operator=(const GroupCreateResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupCreateResponse& default_instance();

  void Swap(GroupCreateResponse* other);

  // implements Message ----------------------------------------------

  GroupCreateResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GroupCreateResponse& from);
  void MergeFrom(const GroupCreateResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required uint32 result_code = 2;
  inline bool has_result_code() const;
  inline void clear_result_code();
  static const int kResultCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 result_code() const;
  inline void set_result_code(::google::protobuf::uint32 value);

  // optional uint32 group_id = 3;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 3;
  inline ::google::protobuf::uint32 group_id() const;
  inline void set_group_id(::google::protobuf::uint32 value);

  // required string group_name = 4;
  inline bool has_group_name() const;
  inline void clear_group_name();
  static const int kGroupNameFieldNumber = 4;
  inline const ::std::string& group_name() const;
  inline void set_group_name(const ::std::string& value);
  inline void set_group_name(const char* value);
  inline void set_group_name(const char* value, size_t size);
  inline ::std::string* mutable_group_name();
  inline ::std::string* release_group_name();
  inline void set_allocated_group_name(::std::string* group_name);

  // repeated uint32 user_id_list = 5;
  inline int user_id_list_size() const;
  inline void clear_user_id_list();
  static const int kUserIdListFieldNumber = 5;
  inline ::google::protobuf::uint32 user_id_list(int index) const;
  inline void set_user_id_list(int index, ::google::protobuf::uint32 value);
  inline void add_user_id_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      user_id_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_user_id_list();

  // optional bytes attach_data = 6;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 6;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:Im.Group.GroupCreateResponse)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_result_code();
  inline void clear_has_result_code();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_group_name();
  inline void clear_has_group_name();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 result_code_;
  ::std::string* group_name_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > user_id_list_;
  ::std::string* attach_data_;
  ::google::protobuf::uint32 group_id_;
  friend void  protobuf_AddDesc_Im_2eGroup_2eproto();
  friend void protobuf_AssignDesc_Im_2eGroup_2eproto();
  friend void protobuf_ShutdownFile_Im_2eGroup_2eproto();

  void InitAsDefaultInstance();
  static GroupCreateResponse* default_instance_;
};
// -------------------------------------------------------------------

class GroupChangeMemberRequest : public ::google::protobuf::Message {
 public:
  GroupChangeMemberRequest();
  virtual ~GroupChangeMemberRequest();

  GroupChangeMemberRequest(const GroupChangeMemberRequest& from);

  inline GroupChangeMemberRequest& operator=(const GroupChangeMemberRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupChangeMemberRequest& default_instance();

  void Swap(GroupChangeMemberRequest* other);

  // implements Message ----------------------------------------------

  GroupChangeMemberRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GroupChangeMemberRequest& from);
  void MergeFrom(const GroupChangeMemberRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required .Im.Base.GroupModifyType change_type = 2;
  inline bool has_change_type() const;
  inline void clear_change_type();
  static const int kChangeTypeFieldNumber = 2;
  inline ::Im::Base::GroupModifyType change_type() const;
  inline void set_change_type(::Im::Base::GroupModifyType value);

  // required uint32 group_id = 3;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 3;
  inline ::google::protobuf::uint32 group_id() const;
  inline void set_group_id(::google::protobuf::uint32 value);

  // repeated uint32 member_id_list = 4;
  inline int member_id_list_size() const;
  inline void clear_member_id_list();
  static const int kMemberIdListFieldNumber = 4;
  inline ::google::protobuf::uint32 member_id_list(int index) const;
  inline void set_member_id_list(int index, ::google::protobuf::uint32 value);
  inline void add_member_id_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      member_id_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_member_id_list();

  // optional bytes attach_data = 5;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 5;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:Im.Group.GroupChangeMemberRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_change_type();
  inline void clear_has_change_type();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 user_id_;
  int change_type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > member_id_list_;
  ::std::string* attach_data_;
  ::google::protobuf::uint32 group_id_;
  friend void  protobuf_AddDesc_Im_2eGroup_2eproto();
  friend void protobuf_AssignDesc_Im_2eGroup_2eproto();
  friend void protobuf_ShutdownFile_Im_2eGroup_2eproto();

  void InitAsDefaultInstance();
  static GroupChangeMemberRequest* default_instance_;
};
// -------------------------------------------------------------------

class GroupChangeMemberResponse : public ::google::protobuf::Message {
 public:
  GroupChangeMemberResponse();
  virtual ~GroupChangeMemberResponse();

  GroupChangeMemberResponse(const GroupChangeMemberResponse& from);

  inline GroupChangeMemberResponse& operator=(const GroupChangeMemberResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupChangeMemberResponse& default_instance();

  void Swap(GroupChangeMemberResponse* other);

  // implements Message ----------------------------------------------

  GroupChangeMemberResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GroupChangeMemberResponse& from);
  void MergeFrom(const GroupChangeMemberResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required .Im.Base.GroupModifyType change_type = 2;
  inline bool has_change_type() const;
  inline void clear_change_type();
  static const int kChangeTypeFieldNumber = 2;
  inline ::Im::Base::GroupModifyType change_type() const;
  inline void set_change_type(::Im::Base::GroupModifyType value);

  // required uint32 result_code = 3;
  inline bool has_result_code() const;
  inline void clear_result_code();
  static const int kResultCodeFieldNumber = 3;
  inline ::google::protobuf::uint32 result_code() const;
  inline void set_result_code(::google::protobuf::uint32 value);

  // required uint32 group_id = 4;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 4;
  inline ::google::protobuf::uint32 group_id() const;
  inline void set_group_id(::google::protobuf::uint32 value);

  // repeated uint32 current_user_id_list = 5;
  inline int current_user_id_list_size() const;
  inline void clear_current_user_id_list();
  static const int kCurrentUserIdListFieldNumber = 5;
  inline ::google::protobuf::uint32 current_user_id_list(int index) const;
  inline void set_current_user_id_list(int index, ::google::protobuf::uint32 value);
  inline void add_current_user_id_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      current_user_id_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_current_user_id_list();

  // repeated uint32 change_user_id_list = 6;
  inline int change_user_id_list_size() const;
  inline void clear_change_user_id_list();
  static const int kChangeUserIdListFieldNumber = 6;
  inline ::google::protobuf::uint32 change_user_id_list(int index) const;
  inline void set_change_user_id_list(int index, ::google::protobuf::uint32 value);
  inline void add_change_user_id_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      change_user_id_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_change_user_id_list();

  // optional bytes attach_data = 7;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 7;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:Im.Group.GroupChangeMemberResponse)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_change_type();
  inline void clear_has_change_type();
  inline void set_has_result_code();
  inline void clear_has_result_code();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 user_id_;
  int change_type_;
  ::google::protobuf::uint32 result_code_;
  ::google::protobuf::uint32 group_id_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > current_user_id_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > change_user_id_list_;
  ::std::string* attach_data_;
  friend void  protobuf_AddDesc_Im_2eGroup_2eproto();
  friend void protobuf_AssignDesc_Im_2eGroup_2eproto();
  friend void protobuf_ShutdownFile_Im_2eGroup_2eproto();

  void InitAsDefaultInstance();
  static GroupChangeMemberResponse* default_instance_;
};
// -------------------------------------------------------------------

class GroupShieldRequest : public ::google::protobuf::Message {
 public:
  GroupShieldRequest();
  virtual ~GroupShieldRequest();

  GroupShieldRequest(const GroupShieldRequest& from);

  inline GroupShieldRequest& operator=(const GroupShieldRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupShieldRequest& default_instance();

  void Swap(GroupShieldRequest* other);

  // implements Message ----------------------------------------------

  GroupShieldRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GroupShieldRequest& from);
  void MergeFrom(const GroupShieldRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required uint32 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint32 group_id() const;
  inline void set_group_id(::google::protobuf::uint32 value);

  // required uint32 shield_status = 3;
  inline bool has_shield_status() const;
  inline void clear_shield_status();
  static const int kShieldStatusFieldNumber = 3;
  inline ::google::protobuf::uint32 shield_status() const;
  inline void set_shield_status(::google::protobuf::uint32 value);

  // optional bytes attach_data = 4;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 4;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:Im.Group.GroupShieldRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_shield_status();
  inline void clear_has_shield_status();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 group_id_;
  ::std::string* attach_data_;
  ::google::protobuf::uint32 shield_status_;
  friend void  protobuf_AddDesc_Im_2eGroup_2eproto();
  friend void protobuf_AssignDesc_Im_2eGroup_2eproto();
  friend void protobuf_ShutdownFile_Im_2eGroup_2eproto();

  void InitAsDefaultInstance();
  static GroupShieldRequest* default_instance_;
};
// -------------------------------------------------------------------

class GroupShieldResponse : public ::google::protobuf::Message {
 public:
  GroupShieldResponse();
  virtual ~GroupShieldResponse();

  GroupShieldResponse(const GroupShieldResponse& from);

  inline GroupShieldResponse& operator=(const GroupShieldResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupShieldResponse& default_instance();

  void Swap(GroupShieldResponse* other);

  // implements Message ----------------------------------------------

  GroupShieldResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GroupShieldResponse& from);
  void MergeFrom(const GroupShieldResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required uint32 group_id = 2;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 2;
  inline ::google::protobuf::uint32 group_id() const;
  inline void set_group_id(::google::protobuf::uint32 value);

  // required uint32 result_code = 3;
  inline bool has_result_code() const;
  inline void clear_result_code();
  static const int kResultCodeFieldNumber = 3;
  inline ::google::protobuf::uint32 result_code() const;
  inline void set_result_code(::google::protobuf::uint32 value);

  // optional bytes attach_data = 4;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 4;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:Im.Group.GroupShieldResponse)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_group_id();
  inline void clear_has_group_id();
  inline void set_has_result_code();
  inline void clear_has_result_code();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 group_id_;
  ::std::string* attach_data_;
  ::google::protobuf::uint32 result_code_;
  friend void  protobuf_AddDesc_Im_2eGroup_2eproto();
  friend void protobuf_AssignDesc_Im_2eGroup_2eproto();
  friend void protobuf_ShutdownFile_Im_2eGroup_2eproto();

  void InitAsDefaultInstance();
  static GroupShieldResponse* default_instance_;
};
// -------------------------------------------------------------------

class GroupChangeMemberNotify : public ::google::protobuf::Message {
 public:
  GroupChangeMemberNotify();
  virtual ~GroupChangeMemberNotify();

  GroupChangeMemberNotify(const GroupChangeMemberNotify& from);

  inline GroupChangeMemberNotify& operator=(const GroupChangeMemberNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GroupChangeMemberNotify& default_instance();

  void Swap(GroupChangeMemberNotify* other);

  // implements Message ----------------------------------------------

  GroupChangeMemberNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GroupChangeMemberNotify& from);
  void MergeFrom(const GroupChangeMemberNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required .Im.Base.GroupModifyType change_type = 2;
  inline bool has_change_type() const;
  inline void clear_change_type();
  static const int kChangeTypeFieldNumber = 2;
  inline ::Im::Base::GroupModifyType change_type() const;
  inline void set_change_type(::Im::Base::GroupModifyType value);

  // required uint32 group_id = 3;
  inline bool has_group_id() const;
  inline void clear_group_id();
  static const int kGroupIdFieldNumber = 3;
  inline ::google::protobuf::uint32 group_id() const;
  inline void set_group_id(::google::protobuf::uint32 value);

  // repeated uint32 current_user_id_list = 4;
  inline int current_user_id_list_size() const;
  inline void clear_current_user_id_list();
  static const int kCurrentUserIdListFieldNumber = 4;
  inline ::google::protobuf::uint32 current_user_id_list(int index) const;
  inline void set_current_user_id_list(int index, ::google::protobuf::uint32 value);
  inline void add_current_user_id_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      current_user_id_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_current_user_id_list();

  // repeated uint32 change_user_id_list = 5;
  inline int change_user_id_list_size() const;
  inline void clear_change_user_id_list();
  static const int kChangeUserIdListFieldNumber = 5;
  inline ::google::protobuf::uint32 change_user_id_list(int index) const;
  inline void set_change_user_id_list(int index, ::google::protobuf::uint32 value);
  inline void add_change_user_id_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      change_user_id_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_change_user_id_list();

  // @@protoc_insertion_point(class_scope:Im.Group.GroupChangeMemberNotify)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_change_type();
  inline void clear_has_change_type();
  inline void set_has_group_id();
  inline void clear_has_group_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 user_id_;
  int change_type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > current_user_id_list_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > change_user_id_list_;
  ::google::protobuf::uint32 group_id_;
  friend void  protobuf_AddDesc_Im_2eGroup_2eproto();
  friend void protobuf_AssignDesc_Im_2eGroup_2eproto();
  friend void protobuf_ShutdownFile_Im_2eGroup_2eproto();

  void InitAsDefaultInstance();
  static GroupChangeMemberNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// NormalGroupListRequest

// required uint32 user_id = 1;
inline bool NormalGroupListRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NormalGroupListRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NormalGroupListRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NormalGroupListRequest::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 NormalGroupListRequest::user_id() const {
  // @@protoc_insertion_point(field_get:Im.Group.NormalGroupListRequest.user_id)
  return user_id_;
}
inline void NormalGroupListRequest::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Group.NormalGroupListRequest.user_id)
}

// optional bytes attach_data = 2;
inline bool NormalGroupListRequest::has_attach_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void NormalGroupListRequest::set_has_attach_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void NormalGroupListRequest::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void NormalGroupListRequest::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& NormalGroupListRequest::attach_data() const {
  // @@protoc_insertion_point(field_get:Im.Group.NormalGroupListRequest.attach_data)
  return *attach_data_;
}
inline void NormalGroupListRequest::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:Im.Group.NormalGroupListRequest.attach_data)
}
inline void NormalGroupListRequest::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Im.Group.NormalGroupListRequest.attach_data)
}
inline void NormalGroupListRequest::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Im.Group.NormalGroupListRequest.attach_data)
}
inline ::std::string* NormalGroupListRequest::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Im.Group.NormalGroupListRequest.attach_data)
  return attach_data_;
}
inline ::std::string* NormalGroupListRequest::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NormalGroupListRequest::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Im.Group.NormalGroupListRequest.attach_data)
}

// -------------------------------------------------------------------

// NormalGroupListResponse

// required uint32 user_id = 1;
inline bool NormalGroupListResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void NormalGroupListResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void NormalGroupListResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void NormalGroupListResponse::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 NormalGroupListResponse::user_id() const {
  // @@protoc_insertion_point(field_get:Im.Group.NormalGroupListResponse.user_id)
  return user_id_;
}
inline void NormalGroupListResponse::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Group.NormalGroupListResponse.user_id)
}

// repeated .Im.Base.GroupVersionInfo group_version_list = 2;
inline int NormalGroupListResponse::group_version_list_size() const {
  return group_version_list_.size();
}
inline void NormalGroupListResponse::clear_group_version_list() {
  group_version_list_.Clear();
}
inline const ::Im::Base::GroupVersionInfo& NormalGroupListResponse::group_version_list(int index) const {
  // @@protoc_insertion_point(field_get:Im.Group.NormalGroupListResponse.group_version_list)
  return group_version_list_.Get(index);
}
inline ::Im::Base::GroupVersionInfo* NormalGroupListResponse::mutable_group_version_list(int index) {
  // @@protoc_insertion_point(field_mutable:Im.Group.NormalGroupListResponse.group_version_list)
  return group_version_list_.Mutable(index);
}
inline ::Im::Base::GroupVersionInfo* NormalGroupListResponse::add_group_version_list() {
  // @@protoc_insertion_point(field_add:Im.Group.NormalGroupListResponse.group_version_list)
  return group_version_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Im::Base::GroupVersionInfo >&
NormalGroupListResponse::group_version_list() const {
  // @@protoc_insertion_point(field_list:Im.Group.NormalGroupListResponse.group_version_list)
  return group_version_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::Im::Base::GroupVersionInfo >*
NormalGroupListResponse::mutable_group_version_list() {
  // @@protoc_insertion_point(field_mutable_list:Im.Group.NormalGroupListResponse.group_version_list)
  return &group_version_list_;
}

// optional bytes attach_data = 3;
inline bool NormalGroupListResponse::has_attach_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void NormalGroupListResponse::set_has_attach_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void NormalGroupListResponse::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void NormalGroupListResponse::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& NormalGroupListResponse::attach_data() const {
  // @@protoc_insertion_point(field_get:Im.Group.NormalGroupListResponse.attach_data)
  return *attach_data_;
}
inline void NormalGroupListResponse::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:Im.Group.NormalGroupListResponse.attach_data)
}
inline void NormalGroupListResponse::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Im.Group.NormalGroupListResponse.attach_data)
}
inline void NormalGroupListResponse::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Im.Group.NormalGroupListResponse.attach_data)
}
inline ::std::string* NormalGroupListResponse::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Im.Group.NormalGroupListResponse.attach_data)
  return attach_data_;
}
inline ::std::string* NormalGroupListResponse::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void NormalGroupListResponse::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Im.Group.NormalGroupListResponse.attach_data)
}

// -------------------------------------------------------------------

// GroupInfoListRequest

// required uint32 user_id = 1;
inline bool GroupInfoListRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupInfoListRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupInfoListRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupInfoListRequest::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 GroupInfoListRequest::user_id() const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupInfoListRequest.user_id)
  return user_id_;
}
inline void GroupInfoListRequest::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Group.GroupInfoListRequest.user_id)
}

// repeated .Im.Base.GroupVersionInfo group_version_list = 2;
inline int GroupInfoListRequest::group_version_list_size() const {
  return group_version_list_.size();
}
inline void GroupInfoListRequest::clear_group_version_list() {
  group_version_list_.Clear();
}
inline const ::Im::Base::GroupVersionInfo& GroupInfoListRequest::group_version_list(int index) const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupInfoListRequest.group_version_list)
  return group_version_list_.Get(index);
}
inline ::Im::Base::GroupVersionInfo* GroupInfoListRequest::mutable_group_version_list(int index) {
  // @@protoc_insertion_point(field_mutable:Im.Group.GroupInfoListRequest.group_version_list)
  return group_version_list_.Mutable(index);
}
inline ::Im::Base::GroupVersionInfo* GroupInfoListRequest::add_group_version_list() {
  // @@protoc_insertion_point(field_add:Im.Group.GroupInfoListRequest.group_version_list)
  return group_version_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Im::Base::GroupVersionInfo >&
GroupInfoListRequest::group_version_list() const {
  // @@protoc_insertion_point(field_list:Im.Group.GroupInfoListRequest.group_version_list)
  return group_version_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::Im::Base::GroupVersionInfo >*
GroupInfoListRequest::mutable_group_version_list() {
  // @@protoc_insertion_point(field_mutable_list:Im.Group.GroupInfoListRequest.group_version_list)
  return &group_version_list_;
}

// optional bytes attach_data = 3;
inline bool GroupInfoListRequest::has_attach_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroupInfoListRequest::set_has_attach_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroupInfoListRequest::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroupInfoListRequest::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& GroupInfoListRequest::attach_data() const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupInfoListRequest.attach_data)
  return *attach_data_;
}
inline void GroupInfoListRequest::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:Im.Group.GroupInfoListRequest.attach_data)
}
inline void GroupInfoListRequest::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Im.Group.GroupInfoListRequest.attach_data)
}
inline void GroupInfoListRequest::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Im.Group.GroupInfoListRequest.attach_data)
}
inline ::std::string* GroupInfoListRequest::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Im.Group.GroupInfoListRequest.attach_data)
  return attach_data_;
}
inline ::std::string* GroupInfoListRequest::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GroupInfoListRequest::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Im.Group.GroupInfoListRequest.attach_data)
}

// -------------------------------------------------------------------

// GroupInfoListResponse

// required uint32 user_id = 1;
inline bool GroupInfoListResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupInfoListResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupInfoListResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupInfoListResponse::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 GroupInfoListResponse::user_id() const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupInfoListResponse.user_id)
  return user_id_;
}
inline void GroupInfoListResponse::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Group.GroupInfoListResponse.user_id)
}

// repeated .Im.Base.GroupInfo group_info_list = 2;
inline int GroupInfoListResponse::group_info_list_size() const {
  return group_info_list_.size();
}
inline void GroupInfoListResponse::clear_group_info_list() {
  group_info_list_.Clear();
}
inline const ::Im::Base::GroupInfo& GroupInfoListResponse::group_info_list(int index) const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupInfoListResponse.group_info_list)
  return group_info_list_.Get(index);
}
inline ::Im::Base::GroupInfo* GroupInfoListResponse::mutable_group_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:Im.Group.GroupInfoListResponse.group_info_list)
  return group_info_list_.Mutable(index);
}
inline ::Im::Base::GroupInfo* GroupInfoListResponse::add_group_info_list() {
  // @@protoc_insertion_point(field_add:Im.Group.GroupInfoListResponse.group_info_list)
  return group_info_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Im::Base::GroupInfo >&
GroupInfoListResponse::group_info_list() const {
  // @@protoc_insertion_point(field_list:Im.Group.GroupInfoListResponse.group_info_list)
  return group_info_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::Im::Base::GroupInfo >*
GroupInfoListResponse::mutable_group_info_list() {
  // @@protoc_insertion_point(field_mutable_list:Im.Group.GroupInfoListResponse.group_info_list)
  return &group_info_list_;
}

// optional bytes attach_data = 3;
inline bool GroupInfoListResponse::has_attach_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroupInfoListResponse::set_has_attach_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroupInfoListResponse::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroupInfoListResponse::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& GroupInfoListResponse::attach_data() const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupInfoListResponse.attach_data)
  return *attach_data_;
}
inline void GroupInfoListResponse::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:Im.Group.GroupInfoListResponse.attach_data)
}
inline void GroupInfoListResponse::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Im.Group.GroupInfoListResponse.attach_data)
}
inline void GroupInfoListResponse::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Im.Group.GroupInfoListResponse.attach_data)
}
inline ::std::string* GroupInfoListResponse::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Im.Group.GroupInfoListResponse.attach_data)
  return attach_data_;
}
inline ::std::string* GroupInfoListResponse::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GroupInfoListResponse::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Im.Group.GroupInfoListResponse.attach_data)
}

// -------------------------------------------------------------------

// GroupCreateRequest

// required uint32 user_id = 1;
inline bool GroupCreateRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupCreateRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupCreateRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupCreateRequest::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 GroupCreateRequest::user_id() const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupCreateRequest.user_id)
  return user_id_;
}
inline void GroupCreateRequest::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Group.GroupCreateRequest.user_id)
}

// required .Im.Base.GroupType group_type = 2;
inline bool GroupCreateRequest::has_group_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupCreateRequest::set_has_group_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupCreateRequest::clear_has_group_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupCreateRequest::clear_group_type() {
  group_type_ = 1;
  clear_has_group_type();
}
inline ::Im::Base::GroupType GroupCreateRequest::group_type() const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupCreateRequest.group_type)
  return static_cast< ::Im::Base::GroupType >(group_type_);
}
inline void GroupCreateRequest::set_group_type(::Im::Base::GroupType value) {
  assert(::Im::Base::GroupType_IsValid(value));
  set_has_group_type();
  group_type_ = value;
  // @@protoc_insertion_point(field_set:Im.Group.GroupCreateRequest.group_type)
}

// required string group_name = 3;
inline bool GroupCreateRequest::has_group_name() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroupCreateRequest::set_has_group_name() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroupCreateRequest::clear_has_group_name() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroupCreateRequest::clear_group_name() {
  if (group_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_->clear();
  }
  clear_has_group_name();
}
inline const ::std::string& GroupCreateRequest::group_name() const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupCreateRequest.group_name)
  return *group_name_;
}
inline void GroupCreateRequest::set_group_name(const ::std::string& value) {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  group_name_->assign(value);
  // @@protoc_insertion_point(field_set:Im.Group.GroupCreateRequest.group_name)
}
inline void GroupCreateRequest::set_group_name(const char* value) {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  group_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Im.Group.GroupCreateRequest.group_name)
}
inline void GroupCreateRequest::set_group_name(const char* value, size_t size) {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  group_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Im.Group.GroupCreateRequest.group_name)
}
inline ::std::string* GroupCreateRequest::mutable_group_name() {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Im.Group.GroupCreateRequest.group_name)
  return group_name_;
}
inline ::std::string* GroupCreateRequest::release_group_name() {
  clear_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = group_name_;
    group_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GroupCreateRequest::set_allocated_group_name(::std::string* group_name) {
  if (group_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_name_;
  }
  if (group_name) {
    set_has_group_name();
    group_name_ = group_name;
  } else {
    clear_has_group_name();
    group_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Im.Group.GroupCreateRequest.group_name)
}

// required string group_avatar = 4;
inline bool GroupCreateRequest::has_group_avatar() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GroupCreateRequest::set_has_group_avatar() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GroupCreateRequest::clear_has_group_avatar() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GroupCreateRequest::clear_group_avatar() {
  if (group_avatar_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_avatar_->clear();
  }
  clear_has_group_avatar();
}
inline const ::std::string& GroupCreateRequest::group_avatar() const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupCreateRequest.group_avatar)
  return *group_avatar_;
}
inline void GroupCreateRequest::set_group_avatar(const ::std::string& value) {
  set_has_group_avatar();
  if (group_avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_avatar_ = new ::std::string;
  }
  group_avatar_->assign(value);
  // @@protoc_insertion_point(field_set:Im.Group.GroupCreateRequest.group_avatar)
}
inline void GroupCreateRequest::set_group_avatar(const char* value) {
  set_has_group_avatar();
  if (group_avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_avatar_ = new ::std::string;
  }
  group_avatar_->assign(value);
  // @@protoc_insertion_point(field_set_char:Im.Group.GroupCreateRequest.group_avatar)
}
inline void GroupCreateRequest::set_group_avatar(const char* value, size_t size) {
  set_has_group_avatar();
  if (group_avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_avatar_ = new ::std::string;
  }
  group_avatar_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Im.Group.GroupCreateRequest.group_avatar)
}
inline ::std::string* GroupCreateRequest::mutable_group_avatar() {
  set_has_group_avatar();
  if (group_avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_avatar_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Im.Group.GroupCreateRequest.group_avatar)
  return group_avatar_;
}
inline ::std::string* GroupCreateRequest::release_group_avatar() {
  clear_has_group_avatar();
  if (group_avatar_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = group_avatar_;
    group_avatar_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GroupCreateRequest::set_allocated_group_avatar(::std::string* group_avatar) {
  if (group_avatar_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_avatar_;
  }
  if (group_avatar) {
    set_has_group_avatar();
    group_avatar_ = group_avatar;
  } else {
    clear_has_group_avatar();
    group_avatar_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Im.Group.GroupCreateRequest.group_avatar)
}

// repeated uint32 group_member_id_list = 5;
inline int GroupCreateRequest::group_member_id_list_size() const {
  return group_member_id_list_.size();
}
inline void GroupCreateRequest::clear_group_member_id_list() {
  group_member_id_list_.Clear();
}
inline ::google::protobuf::uint32 GroupCreateRequest::group_member_id_list(int index) const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupCreateRequest.group_member_id_list)
  return group_member_id_list_.Get(index);
}
inline void GroupCreateRequest::set_group_member_id_list(int index, ::google::protobuf::uint32 value) {
  group_member_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:Im.Group.GroupCreateRequest.group_member_id_list)
}
inline void GroupCreateRequest::add_group_member_id_list(::google::protobuf::uint32 value) {
  group_member_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:Im.Group.GroupCreateRequest.group_member_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GroupCreateRequest::group_member_id_list() const {
  // @@protoc_insertion_point(field_list:Im.Group.GroupCreateRequest.group_member_id_list)
  return group_member_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GroupCreateRequest::mutable_group_member_id_list() {
  // @@protoc_insertion_point(field_mutable_list:Im.Group.GroupCreateRequest.group_member_id_list)
  return &group_member_id_list_;
}

// optional bytes attach_data = 6;
inline bool GroupCreateRequest::has_attach_data() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GroupCreateRequest::set_has_attach_data() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GroupCreateRequest::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GroupCreateRequest::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& GroupCreateRequest::attach_data() const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupCreateRequest.attach_data)
  return *attach_data_;
}
inline void GroupCreateRequest::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:Im.Group.GroupCreateRequest.attach_data)
}
inline void GroupCreateRequest::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Im.Group.GroupCreateRequest.attach_data)
}
inline void GroupCreateRequest::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Im.Group.GroupCreateRequest.attach_data)
}
inline ::std::string* GroupCreateRequest::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Im.Group.GroupCreateRequest.attach_data)
  return attach_data_;
}
inline ::std::string* GroupCreateRequest::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GroupCreateRequest::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Im.Group.GroupCreateRequest.attach_data)
}

// -------------------------------------------------------------------

// GroupCreateResponse

// required uint32 user_id = 1;
inline bool GroupCreateResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupCreateResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupCreateResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupCreateResponse::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 GroupCreateResponse::user_id() const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupCreateResponse.user_id)
  return user_id_;
}
inline void GroupCreateResponse::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Group.GroupCreateResponse.user_id)
}

// required uint32 result_code = 2;
inline bool GroupCreateResponse::has_result_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupCreateResponse::set_has_result_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupCreateResponse::clear_has_result_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupCreateResponse::clear_result_code() {
  result_code_ = 0u;
  clear_has_result_code();
}
inline ::google::protobuf::uint32 GroupCreateResponse::result_code() const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupCreateResponse.result_code)
  return result_code_;
}
inline void GroupCreateResponse::set_result_code(::google::protobuf::uint32 value) {
  set_has_result_code();
  result_code_ = value;
  // @@protoc_insertion_point(field_set:Im.Group.GroupCreateResponse.result_code)
}

// optional uint32 group_id = 3;
inline bool GroupCreateResponse::has_group_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroupCreateResponse::set_has_group_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroupCreateResponse::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroupCreateResponse::clear_group_id() {
  group_id_ = 0u;
  clear_has_group_id();
}
inline ::google::protobuf::uint32 GroupCreateResponse::group_id() const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupCreateResponse.group_id)
  return group_id_;
}
inline void GroupCreateResponse::set_group_id(::google::protobuf::uint32 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Group.GroupCreateResponse.group_id)
}

// required string group_name = 4;
inline bool GroupCreateResponse::has_group_name() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GroupCreateResponse::set_has_group_name() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GroupCreateResponse::clear_has_group_name() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GroupCreateResponse::clear_group_name() {
  if (group_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_->clear();
  }
  clear_has_group_name();
}
inline const ::std::string& GroupCreateResponse::group_name() const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupCreateResponse.group_name)
  return *group_name_;
}
inline void GroupCreateResponse::set_group_name(const ::std::string& value) {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  group_name_->assign(value);
  // @@protoc_insertion_point(field_set:Im.Group.GroupCreateResponse.group_name)
}
inline void GroupCreateResponse::set_group_name(const char* value) {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  group_name_->assign(value);
  // @@protoc_insertion_point(field_set_char:Im.Group.GroupCreateResponse.group_name)
}
inline void GroupCreateResponse::set_group_name(const char* value, size_t size) {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  group_name_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Im.Group.GroupCreateResponse.group_name)
}
inline ::std::string* GroupCreateResponse::mutable_group_name() {
  set_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    group_name_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Im.Group.GroupCreateResponse.group_name)
  return group_name_;
}
inline ::std::string* GroupCreateResponse::release_group_name() {
  clear_has_group_name();
  if (group_name_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = group_name_;
    group_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GroupCreateResponse::set_allocated_group_name(::std::string* group_name) {
  if (group_name_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete group_name_;
  }
  if (group_name) {
    set_has_group_name();
    group_name_ = group_name;
  } else {
    clear_has_group_name();
    group_name_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Im.Group.GroupCreateResponse.group_name)
}

// repeated uint32 user_id_list = 5;
inline int GroupCreateResponse::user_id_list_size() const {
  return user_id_list_.size();
}
inline void GroupCreateResponse::clear_user_id_list() {
  user_id_list_.Clear();
}
inline ::google::protobuf::uint32 GroupCreateResponse::user_id_list(int index) const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupCreateResponse.user_id_list)
  return user_id_list_.Get(index);
}
inline void GroupCreateResponse::set_user_id_list(int index, ::google::protobuf::uint32 value) {
  user_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:Im.Group.GroupCreateResponse.user_id_list)
}
inline void GroupCreateResponse::add_user_id_list(::google::protobuf::uint32 value) {
  user_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:Im.Group.GroupCreateResponse.user_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GroupCreateResponse::user_id_list() const {
  // @@protoc_insertion_point(field_list:Im.Group.GroupCreateResponse.user_id_list)
  return user_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GroupCreateResponse::mutable_user_id_list() {
  // @@protoc_insertion_point(field_mutable_list:Im.Group.GroupCreateResponse.user_id_list)
  return &user_id_list_;
}

// optional bytes attach_data = 6;
inline bool GroupCreateResponse::has_attach_data() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GroupCreateResponse::set_has_attach_data() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GroupCreateResponse::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GroupCreateResponse::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& GroupCreateResponse::attach_data() const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupCreateResponse.attach_data)
  return *attach_data_;
}
inline void GroupCreateResponse::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:Im.Group.GroupCreateResponse.attach_data)
}
inline void GroupCreateResponse::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Im.Group.GroupCreateResponse.attach_data)
}
inline void GroupCreateResponse::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Im.Group.GroupCreateResponse.attach_data)
}
inline ::std::string* GroupCreateResponse::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Im.Group.GroupCreateResponse.attach_data)
  return attach_data_;
}
inline ::std::string* GroupCreateResponse::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GroupCreateResponse::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Im.Group.GroupCreateResponse.attach_data)
}

// -------------------------------------------------------------------

// GroupChangeMemberRequest

// required uint32 user_id = 1;
inline bool GroupChangeMemberRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupChangeMemberRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupChangeMemberRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupChangeMemberRequest::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 GroupChangeMemberRequest::user_id() const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupChangeMemberRequest.user_id)
  return user_id_;
}
inline void GroupChangeMemberRequest::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Group.GroupChangeMemberRequest.user_id)
}

// required .Im.Base.GroupModifyType change_type = 2;
inline bool GroupChangeMemberRequest::has_change_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupChangeMemberRequest::set_has_change_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupChangeMemberRequest::clear_has_change_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupChangeMemberRequest::clear_change_type() {
  change_type_ = 1;
  clear_has_change_type();
}
inline ::Im::Base::GroupModifyType GroupChangeMemberRequest::change_type() const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupChangeMemberRequest.change_type)
  return static_cast< ::Im::Base::GroupModifyType >(change_type_);
}
inline void GroupChangeMemberRequest::set_change_type(::Im::Base::GroupModifyType value) {
  assert(::Im::Base::GroupModifyType_IsValid(value));
  set_has_change_type();
  change_type_ = value;
  // @@protoc_insertion_point(field_set:Im.Group.GroupChangeMemberRequest.change_type)
}

// required uint32 group_id = 3;
inline bool GroupChangeMemberRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroupChangeMemberRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroupChangeMemberRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroupChangeMemberRequest::clear_group_id() {
  group_id_ = 0u;
  clear_has_group_id();
}
inline ::google::protobuf::uint32 GroupChangeMemberRequest::group_id() const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupChangeMemberRequest.group_id)
  return group_id_;
}
inline void GroupChangeMemberRequest::set_group_id(::google::protobuf::uint32 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Group.GroupChangeMemberRequest.group_id)
}

// repeated uint32 member_id_list = 4;
inline int GroupChangeMemberRequest::member_id_list_size() const {
  return member_id_list_.size();
}
inline void GroupChangeMemberRequest::clear_member_id_list() {
  member_id_list_.Clear();
}
inline ::google::protobuf::uint32 GroupChangeMemberRequest::member_id_list(int index) const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupChangeMemberRequest.member_id_list)
  return member_id_list_.Get(index);
}
inline void GroupChangeMemberRequest::set_member_id_list(int index, ::google::protobuf::uint32 value) {
  member_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:Im.Group.GroupChangeMemberRequest.member_id_list)
}
inline void GroupChangeMemberRequest::add_member_id_list(::google::protobuf::uint32 value) {
  member_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:Im.Group.GroupChangeMemberRequest.member_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GroupChangeMemberRequest::member_id_list() const {
  // @@protoc_insertion_point(field_list:Im.Group.GroupChangeMemberRequest.member_id_list)
  return member_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GroupChangeMemberRequest::mutable_member_id_list() {
  // @@protoc_insertion_point(field_mutable_list:Im.Group.GroupChangeMemberRequest.member_id_list)
  return &member_id_list_;
}

// optional bytes attach_data = 5;
inline bool GroupChangeMemberRequest::has_attach_data() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GroupChangeMemberRequest::set_has_attach_data() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GroupChangeMemberRequest::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GroupChangeMemberRequest::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& GroupChangeMemberRequest::attach_data() const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupChangeMemberRequest.attach_data)
  return *attach_data_;
}
inline void GroupChangeMemberRequest::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:Im.Group.GroupChangeMemberRequest.attach_data)
}
inline void GroupChangeMemberRequest::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Im.Group.GroupChangeMemberRequest.attach_data)
}
inline void GroupChangeMemberRequest::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Im.Group.GroupChangeMemberRequest.attach_data)
}
inline ::std::string* GroupChangeMemberRequest::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Im.Group.GroupChangeMemberRequest.attach_data)
  return attach_data_;
}
inline ::std::string* GroupChangeMemberRequest::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GroupChangeMemberRequest::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Im.Group.GroupChangeMemberRequest.attach_data)
}

// -------------------------------------------------------------------

// GroupChangeMemberResponse

// required uint32 user_id = 1;
inline bool GroupChangeMemberResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupChangeMemberResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupChangeMemberResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupChangeMemberResponse::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 GroupChangeMemberResponse::user_id() const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupChangeMemberResponse.user_id)
  return user_id_;
}
inline void GroupChangeMemberResponse::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Group.GroupChangeMemberResponse.user_id)
}

// required .Im.Base.GroupModifyType change_type = 2;
inline bool GroupChangeMemberResponse::has_change_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupChangeMemberResponse::set_has_change_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupChangeMemberResponse::clear_has_change_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupChangeMemberResponse::clear_change_type() {
  change_type_ = 1;
  clear_has_change_type();
}
inline ::Im::Base::GroupModifyType GroupChangeMemberResponse::change_type() const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupChangeMemberResponse.change_type)
  return static_cast< ::Im::Base::GroupModifyType >(change_type_);
}
inline void GroupChangeMemberResponse::set_change_type(::Im::Base::GroupModifyType value) {
  assert(::Im::Base::GroupModifyType_IsValid(value));
  set_has_change_type();
  change_type_ = value;
  // @@protoc_insertion_point(field_set:Im.Group.GroupChangeMemberResponse.change_type)
}

// required uint32 result_code = 3;
inline bool GroupChangeMemberResponse::has_result_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroupChangeMemberResponse::set_has_result_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroupChangeMemberResponse::clear_has_result_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroupChangeMemberResponse::clear_result_code() {
  result_code_ = 0u;
  clear_has_result_code();
}
inline ::google::protobuf::uint32 GroupChangeMemberResponse::result_code() const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupChangeMemberResponse.result_code)
  return result_code_;
}
inline void GroupChangeMemberResponse::set_result_code(::google::protobuf::uint32 value) {
  set_has_result_code();
  result_code_ = value;
  // @@protoc_insertion_point(field_set:Im.Group.GroupChangeMemberResponse.result_code)
}

// required uint32 group_id = 4;
inline bool GroupChangeMemberResponse::has_group_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GroupChangeMemberResponse::set_has_group_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GroupChangeMemberResponse::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GroupChangeMemberResponse::clear_group_id() {
  group_id_ = 0u;
  clear_has_group_id();
}
inline ::google::protobuf::uint32 GroupChangeMemberResponse::group_id() const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupChangeMemberResponse.group_id)
  return group_id_;
}
inline void GroupChangeMemberResponse::set_group_id(::google::protobuf::uint32 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Group.GroupChangeMemberResponse.group_id)
}

// repeated uint32 current_user_id_list = 5;
inline int GroupChangeMemberResponse::current_user_id_list_size() const {
  return current_user_id_list_.size();
}
inline void GroupChangeMemberResponse::clear_current_user_id_list() {
  current_user_id_list_.Clear();
}
inline ::google::protobuf::uint32 GroupChangeMemberResponse::current_user_id_list(int index) const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupChangeMemberResponse.current_user_id_list)
  return current_user_id_list_.Get(index);
}
inline void GroupChangeMemberResponse::set_current_user_id_list(int index, ::google::protobuf::uint32 value) {
  current_user_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:Im.Group.GroupChangeMemberResponse.current_user_id_list)
}
inline void GroupChangeMemberResponse::add_current_user_id_list(::google::protobuf::uint32 value) {
  current_user_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:Im.Group.GroupChangeMemberResponse.current_user_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GroupChangeMemberResponse::current_user_id_list() const {
  // @@protoc_insertion_point(field_list:Im.Group.GroupChangeMemberResponse.current_user_id_list)
  return current_user_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GroupChangeMemberResponse::mutable_current_user_id_list() {
  // @@protoc_insertion_point(field_mutable_list:Im.Group.GroupChangeMemberResponse.current_user_id_list)
  return &current_user_id_list_;
}

// repeated uint32 change_user_id_list = 6;
inline int GroupChangeMemberResponse::change_user_id_list_size() const {
  return change_user_id_list_.size();
}
inline void GroupChangeMemberResponse::clear_change_user_id_list() {
  change_user_id_list_.Clear();
}
inline ::google::protobuf::uint32 GroupChangeMemberResponse::change_user_id_list(int index) const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupChangeMemberResponse.change_user_id_list)
  return change_user_id_list_.Get(index);
}
inline void GroupChangeMemberResponse::set_change_user_id_list(int index, ::google::protobuf::uint32 value) {
  change_user_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:Im.Group.GroupChangeMemberResponse.change_user_id_list)
}
inline void GroupChangeMemberResponse::add_change_user_id_list(::google::protobuf::uint32 value) {
  change_user_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:Im.Group.GroupChangeMemberResponse.change_user_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GroupChangeMemberResponse::change_user_id_list() const {
  // @@protoc_insertion_point(field_list:Im.Group.GroupChangeMemberResponse.change_user_id_list)
  return change_user_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GroupChangeMemberResponse::mutable_change_user_id_list() {
  // @@protoc_insertion_point(field_mutable_list:Im.Group.GroupChangeMemberResponse.change_user_id_list)
  return &change_user_id_list_;
}

// optional bytes attach_data = 7;
inline bool GroupChangeMemberResponse::has_attach_data() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void GroupChangeMemberResponse::set_has_attach_data() {
  _has_bits_[0] |= 0x00000040u;
}
inline void GroupChangeMemberResponse::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void GroupChangeMemberResponse::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& GroupChangeMemberResponse::attach_data() const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupChangeMemberResponse.attach_data)
  return *attach_data_;
}
inline void GroupChangeMemberResponse::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:Im.Group.GroupChangeMemberResponse.attach_data)
}
inline void GroupChangeMemberResponse::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Im.Group.GroupChangeMemberResponse.attach_data)
}
inline void GroupChangeMemberResponse::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Im.Group.GroupChangeMemberResponse.attach_data)
}
inline ::std::string* GroupChangeMemberResponse::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Im.Group.GroupChangeMemberResponse.attach_data)
  return attach_data_;
}
inline ::std::string* GroupChangeMemberResponse::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GroupChangeMemberResponse::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Im.Group.GroupChangeMemberResponse.attach_data)
}

// -------------------------------------------------------------------

// GroupShieldRequest

// required uint32 user_id = 1;
inline bool GroupShieldRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupShieldRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupShieldRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupShieldRequest::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 GroupShieldRequest::user_id() const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupShieldRequest.user_id)
  return user_id_;
}
inline void GroupShieldRequest::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Group.GroupShieldRequest.user_id)
}

// required uint32 group_id = 2;
inline bool GroupShieldRequest::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupShieldRequest::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupShieldRequest::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupShieldRequest::clear_group_id() {
  group_id_ = 0u;
  clear_has_group_id();
}
inline ::google::protobuf::uint32 GroupShieldRequest::group_id() const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupShieldRequest.group_id)
  return group_id_;
}
inline void GroupShieldRequest::set_group_id(::google::protobuf::uint32 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Group.GroupShieldRequest.group_id)
}

// required uint32 shield_status = 3;
inline bool GroupShieldRequest::has_shield_status() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroupShieldRequest::set_has_shield_status() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroupShieldRequest::clear_has_shield_status() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroupShieldRequest::clear_shield_status() {
  shield_status_ = 0u;
  clear_has_shield_status();
}
inline ::google::protobuf::uint32 GroupShieldRequest::shield_status() const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupShieldRequest.shield_status)
  return shield_status_;
}
inline void GroupShieldRequest::set_shield_status(::google::protobuf::uint32 value) {
  set_has_shield_status();
  shield_status_ = value;
  // @@protoc_insertion_point(field_set:Im.Group.GroupShieldRequest.shield_status)
}

// optional bytes attach_data = 4;
inline bool GroupShieldRequest::has_attach_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GroupShieldRequest::set_has_attach_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GroupShieldRequest::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GroupShieldRequest::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& GroupShieldRequest::attach_data() const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupShieldRequest.attach_data)
  return *attach_data_;
}
inline void GroupShieldRequest::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:Im.Group.GroupShieldRequest.attach_data)
}
inline void GroupShieldRequest::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Im.Group.GroupShieldRequest.attach_data)
}
inline void GroupShieldRequest::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Im.Group.GroupShieldRequest.attach_data)
}
inline ::std::string* GroupShieldRequest::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Im.Group.GroupShieldRequest.attach_data)
  return attach_data_;
}
inline ::std::string* GroupShieldRequest::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GroupShieldRequest::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Im.Group.GroupShieldRequest.attach_data)
}

// -------------------------------------------------------------------

// GroupShieldResponse

// required uint32 user_id = 1;
inline bool GroupShieldResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupShieldResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupShieldResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupShieldResponse::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 GroupShieldResponse::user_id() const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupShieldResponse.user_id)
  return user_id_;
}
inline void GroupShieldResponse::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Group.GroupShieldResponse.user_id)
}

// required uint32 group_id = 2;
inline bool GroupShieldResponse::has_group_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupShieldResponse::set_has_group_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupShieldResponse::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupShieldResponse::clear_group_id() {
  group_id_ = 0u;
  clear_has_group_id();
}
inline ::google::protobuf::uint32 GroupShieldResponse::group_id() const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupShieldResponse.group_id)
  return group_id_;
}
inline void GroupShieldResponse::set_group_id(::google::protobuf::uint32 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Group.GroupShieldResponse.group_id)
}

// required uint32 result_code = 3;
inline bool GroupShieldResponse::has_result_code() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroupShieldResponse::set_has_result_code() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroupShieldResponse::clear_has_result_code() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroupShieldResponse::clear_result_code() {
  result_code_ = 0u;
  clear_has_result_code();
}
inline ::google::protobuf::uint32 GroupShieldResponse::result_code() const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupShieldResponse.result_code)
  return result_code_;
}
inline void GroupShieldResponse::set_result_code(::google::protobuf::uint32 value) {
  set_has_result_code();
  result_code_ = value;
  // @@protoc_insertion_point(field_set:Im.Group.GroupShieldResponse.result_code)
}

// optional bytes attach_data = 4;
inline bool GroupShieldResponse::has_attach_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GroupShieldResponse::set_has_attach_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GroupShieldResponse::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GroupShieldResponse::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& GroupShieldResponse::attach_data() const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupShieldResponse.attach_data)
  return *attach_data_;
}
inline void GroupShieldResponse::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:Im.Group.GroupShieldResponse.attach_data)
}
inline void GroupShieldResponse::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Im.Group.GroupShieldResponse.attach_data)
}
inline void GroupShieldResponse::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Im.Group.GroupShieldResponse.attach_data)
}
inline ::std::string* GroupShieldResponse::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Im.Group.GroupShieldResponse.attach_data)
  return attach_data_;
}
inline ::std::string* GroupShieldResponse::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GroupShieldResponse::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Im.Group.GroupShieldResponse.attach_data)
}

// -------------------------------------------------------------------

// GroupChangeMemberNotify

// required uint32 user_id = 1;
inline bool GroupChangeMemberNotify::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GroupChangeMemberNotify::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GroupChangeMemberNotify::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GroupChangeMemberNotify::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 GroupChangeMemberNotify::user_id() const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupChangeMemberNotify.user_id)
  return user_id_;
}
inline void GroupChangeMemberNotify::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Group.GroupChangeMemberNotify.user_id)
}

// required .Im.Base.GroupModifyType change_type = 2;
inline bool GroupChangeMemberNotify::has_change_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GroupChangeMemberNotify::set_has_change_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GroupChangeMemberNotify::clear_has_change_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GroupChangeMemberNotify::clear_change_type() {
  change_type_ = 1;
  clear_has_change_type();
}
inline ::Im::Base::GroupModifyType GroupChangeMemberNotify::change_type() const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupChangeMemberNotify.change_type)
  return static_cast< ::Im::Base::GroupModifyType >(change_type_);
}
inline void GroupChangeMemberNotify::set_change_type(::Im::Base::GroupModifyType value) {
  assert(::Im::Base::GroupModifyType_IsValid(value));
  set_has_change_type();
  change_type_ = value;
  // @@protoc_insertion_point(field_set:Im.Group.GroupChangeMemberNotify.change_type)
}

// required uint32 group_id = 3;
inline bool GroupChangeMemberNotify::has_group_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GroupChangeMemberNotify::set_has_group_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GroupChangeMemberNotify::clear_has_group_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GroupChangeMemberNotify::clear_group_id() {
  group_id_ = 0u;
  clear_has_group_id();
}
inline ::google::protobuf::uint32 GroupChangeMemberNotify::group_id() const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupChangeMemberNotify.group_id)
  return group_id_;
}
inline void GroupChangeMemberNotify::set_group_id(::google::protobuf::uint32 value) {
  set_has_group_id();
  group_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Group.GroupChangeMemberNotify.group_id)
}

// repeated uint32 current_user_id_list = 4;
inline int GroupChangeMemberNotify::current_user_id_list_size() const {
  return current_user_id_list_.size();
}
inline void GroupChangeMemberNotify::clear_current_user_id_list() {
  current_user_id_list_.Clear();
}
inline ::google::protobuf::uint32 GroupChangeMemberNotify::current_user_id_list(int index) const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupChangeMemberNotify.current_user_id_list)
  return current_user_id_list_.Get(index);
}
inline void GroupChangeMemberNotify::set_current_user_id_list(int index, ::google::protobuf::uint32 value) {
  current_user_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:Im.Group.GroupChangeMemberNotify.current_user_id_list)
}
inline void GroupChangeMemberNotify::add_current_user_id_list(::google::protobuf::uint32 value) {
  current_user_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:Im.Group.GroupChangeMemberNotify.current_user_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GroupChangeMemberNotify::current_user_id_list() const {
  // @@protoc_insertion_point(field_list:Im.Group.GroupChangeMemberNotify.current_user_id_list)
  return current_user_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GroupChangeMemberNotify::mutable_current_user_id_list() {
  // @@protoc_insertion_point(field_mutable_list:Im.Group.GroupChangeMemberNotify.current_user_id_list)
  return &current_user_id_list_;
}

// repeated uint32 change_user_id_list = 5;
inline int GroupChangeMemberNotify::change_user_id_list_size() const {
  return change_user_id_list_.size();
}
inline void GroupChangeMemberNotify::clear_change_user_id_list() {
  change_user_id_list_.Clear();
}
inline ::google::protobuf::uint32 GroupChangeMemberNotify::change_user_id_list(int index) const {
  // @@protoc_insertion_point(field_get:Im.Group.GroupChangeMemberNotify.change_user_id_list)
  return change_user_id_list_.Get(index);
}
inline void GroupChangeMemberNotify::set_change_user_id_list(int index, ::google::protobuf::uint32 value) {
  change_user_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:Im.Group.GroupChangeMemberNotify.change_user_id_list)
}
inline void GroupChangeMemberNotify::add_change_user_id_list(::google::protobuf::uint32 value) {
  change_user_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:Im.Group.GroupChangeMemberNotify.change_user_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GroupChangeMemberNotify::change_user_id_list() const {
  // @@protoc_insertion_point(field_list:Im.Group.GroupChangeMemberNotify.change_user_id_list)
  return change_user_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GroupChangeMemberNotify::mutable_change_user_id_list() {
  // @@protoc_insertion_point(field_mutable_list:Im.Group.GroupChangeMemberNotify.change_user_id_list)
  return &change_user_id_list_;
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Group
}  // namespace Im

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Im_2eGroup_2eproto__INCLUDED
