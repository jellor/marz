// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Im.Buddy.proto

#ifndef PROTOBUF_Im_2eBuddy_2eproto__INCLUDED
#define PROTOBUF_Im_2eBuddy_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Im.Base.pb.h"
// @@protoc_insertion_point(includes)

namespace Im {
namespace Buddy {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Im_2eBuddy_2eproto();
void protobuf_AssignDesc_Im_2eBuddy_2eproto();
void protobuf_ShutdownFile_Im_2eBuddy_2eproto();

class RecentContactSessionRequest;
class RecentContactSessionResponse;
class UserStatusNotify;
class UserInfoRequest;
class UserInfoResponse;
class RemoveSessionRequest;
class RemoveSessionResponse;
class AllUserRequest;
class AllUserResponse;
class UsersStatusRequest;
class UsersStatusResponse;
class changeAvatarRequest;
class changeAvatarResponse;
class PcLoginStatusNotify;
class RemoveSessionNotify;

// ===================================================================

class RecentContactSessionRequest : public ::google::protobuf::Message {
 public:
  RecentContactSessionRequest();
  virtual ~RecentContactSessionRequest();

  RecentContactSessionRequest(const RecentContactSessionRequest& from);

  inline RecentContactSessionRequest& operator=(const RecentContactSessionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecentContactSessionRequest& default_instance();

  void Swap(RecentContactSessionRequest* other);

  // implements Message ----------------------------------------------

  RecentContactSessionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RecentContactSessionRequest& from);
  void MergeFrom(const RecentContactSessionRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required uint32 latest_update_time = 2;
  inline bool has_latest_update_time() const;
  inline void clear_latest_update_time();
  static const int kLatestUpdateTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 latest_update_time() const;
  inline void set_latest_update_time(::google::protobuf::uint32 value);

  // optional bytes attach_data = 3;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 3;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:Im.Buddy.RecentContactSessionRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_latest_update_time();
  inline void clear_has_latest_update_time();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 latest_update_time_;
  ::std::string* attach_data_;
  friend void  protobuf_AddDesc_Im_2eBuddy_2eproto();
  friend void protobuf_AssignDesc_Im_2eBuddy_2eproto();
  friend void protobuf_ShutdownFile_Im_2eBuddy_2eproto();

  void InitAsDefaultInstance();
  static RecentContactSessionRequest* default_instance_;
};
// -------------------------------------------------------------------

class RecentContactSessionResponse : public ::google::protobuf::Message {
 public:
  RecentContactSessionResponse();
  virtual ~RecentContactSessionResponse();

  RecentContactSessionResponse(const RecentContactSessionResponse& from);

  inline RecentContactSessionResponse& operator=(const RecentContactSessionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RecentContactSessionResponse& default_instance();

  void Swap(RecentContactSessionResponse* other);

  // implements Message ----------------------------------------------

  RecentContactSessionResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RecentContactSessionResponse& from);
  void MergeFrom(const RecentContactSessionResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // repeated .Im.Base.ContactSessionInfo contact_session_list = 2;
  inline int contact_session_list_size() const;
  inline void clear_contact_session_list();
  static const int kContactSessionListFieldNumber = 2;
  inline const ::Im::Base::ContactSessionInfo& contact_session_list(int index) const;
  inline ::Im::Base::ContactSessionInfo* mutable_contact_session_list(int index);
  inline ::Im::Base::ContactSessionInfo* add_contact_session_list();
  inline const ::google::protobuf::RepeatedPtrField< ::Im::Base::ContactSessionInfo >&
      contact_session_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::Im::Base::ContactSessionInfo >*
      mutable_contact_session_list();

  // optional bytes attach_data = 3;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 3;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:Im.Buddy.RecentContactSessionResponse)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Im::Base::ContactSessionInfo > contact_session_list_;
  ::std::string* attach_data_;
  ::google::protobuf::uint32 user_id_;
  friend void  protobuf_AddDesc_Im_2eBuddy_2eproto();
  friend void protobuf_AssignDesc_Im_2eBuddy_2eproto();
  friend void protobuf_ShutdownFile_Im_2eBuddy_2eproto();

  void InitAsDefaultInstance();
  static RecentContactSessionResponse* default_instance_;
};
// -------------------------------------------------------------------

class UserStatusNotify : public ::google::protobuf::Message {
 public:
  UserStatusNotify();
  virtual ~UserStatusNotify();

  UserStatusNotify(const UserStatusNotify& from);

  inline UserStatusNotify& operator=(const UserStatusNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserStatusNotify& default_instance();

  void Swap(UserStatusNotify* other);

  // implements Message ----------------------------------------------

  UserStatusNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserStatusNotify& from);
  void MergeFrom(const UserStatusNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required .Im.Base.UserStatus user_status = 1;
  inline bool has_user_status() const;
  inline void clear_user_status();
  static const int kUserStatusFieldNumber = 1;
  inline const ::Im::Base::UserStatus& user_status() const;
  inline ::Im::Base::UserStatus* mutable_user_status();
  inline ::Im::Base::UserStatus* release_user_status();
  inline void set_allocated_user_status(::Im::Base::UserStatus* user_status);

  // @@protoc_insertion_point(class_scope:Im.Buddy.UserStatusNotify)
 private:
  inline void set_has_user_status();
  inline void clear_has_user_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::Im::Base::UserStatus* user_status_;
  friend void  protobuf_AddDesc_Im_2eBuddy_2eproto();
  friend void protobuf_AssignDesc_Im_2eBuddy_2eproto();
  friend void protobuf_ShutdownFile_Im_2eBuddy_2eproto();

  void InitAsDefaultInstance();
  static UserStatusNotify* default_instance_;
};
// -------------------------------------------------------------------

class UserInfoRequest : public ::google::protobuf::Message {
 public:
  UserInfoRequest();
  virtual ~UserInfoRequest();

  UserInfoRequest(const UserInfoRequest& from);

  inline UserInfoRequest& operator=(const UserInfoRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserInfoRequest& default_instance();

  void Swap(UserInfoRequest* other);

  // implements Message ----------------------------------------------

  UserInfoRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserInfoRequest& from);
  void MergeFrom(const UserInfoRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // repeated uint32 user_id_list = 2;
  inline int user_id_list_size() const;
  inline void clear_user_id_list();
  static const int kUserIdListFieldNumber = 2;
  inline ::google::protobuf::uint32 user_id_list(int index) const;
  inline void set_user_id_list(int index, ::google::protobuf::uint32 value);
  inline void add_user_id_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      user_id_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_user_id_list();

  // optional bytes attach_data = 3;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 3;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:Im.Buddy.UserInfoRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > user_id_list_;
  ::std::string* attach_data_;
  ::google::protobuf::uint32 user_id_;
  friend void  protobuf_AddDesc_Im_2eBuddy_2eproto();
  friend void protobuf_AssignDesc_Im_2eBuddy_2eproto();
  friend void protobuf_ShutdownFile_Im_2eBuddy_2eproto();

  void InitAsDefaultInstance();
  static UserInfoRequest* default_instance_;
};
// -------------------------------------------------------------------

class UserInfoResponse : public ::google::protobuf::Message {
 public:
  UserInfoResponse();
  virtual ~UserInfoResponse();

  UserInfoResponse(const UserInfoResponse& from);

  inline UserInfoResponse& operator=(const UserInfoResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UserInfoResponse& default_instance();

  void Swap(UserInfoResponse* other);

  // implements Message ----------------------------------------------

  UserInfoResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UserInfoResponse& from);
  void MergeFrom(const UserInfoResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // repeated .Im.Base.UserInfo user_info_list = 2;
  inline int user_info_list_size() const;
  inline void clear_user_info_list();
  static const int kUserInfoListFieldNumber = 2;
  inline const ::Im::Base::UserInfo& user_info_list(int index) const;
  inline ::Im::Base::UserInfo* mutable_user_info_list(int index);
  inline ::Im::Base::UserInfo* add_user_info_list();
  inline const ::google::protobuf::RepeatedPtrField< ::Im::Base::UserInfo >&
      user_info_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::Im::Base::UserInfo >*
      mutable_user_info_list();

  // optional bytes attach_data = 3;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 3;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:Im.Buddy.UserInfoResponse)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Im::Base::UserInfo > user_info_list_;
  ::std::string* attach_data_;
  ::google::protobuf::uint32 user_id_;
  friend void  protobuf_AddDesc_Im_2eBuddy_2eproto();
  friend void protobuf_AssignDesc_Im_2eBuddy_2eproto();
  friend void protobuf_ShutdownFile_Im_2eBuddy_2eproto();

  void InitAsDefaultInstance();
  static UserInfoResponse* default_instance_;
};
// -------------------------------------------------------------------

class RemoveSessionRequest : public ::google::protobuf::Message {
 public:
  RemoveSessionRequest();
  virtual ~RemoveSessionRequest();

  RemoveSessionRequest(const RemoveSessionRequest& from);

  inline RemoveSessionRequest& operator=(const RemoveSessionRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveSessionRequest& default_instance();

  void Swap(RemoveSessionRequest* other);

  // implements Message ----------------------------------------------

  RemoveSessionRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RemoveSessionRequest& from);
  void MergeFrom(const RemoveSessionRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required .Im.Base.SessionType session_type = 2;
  inline bool has_session_type() const;
  inline void clear_session_type();
  static const int kSessionTypeFieldNumber = 2;
  inline ::Im::Base::SessionType session_type() const;
  inline void set_session_type(::Im::Base::SessionType value);

  // required uint32 session_id = 3;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 3;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);

  // optional bytes attach_data = 4;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 4;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:Im.Buddy.RemoveSessionRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_session_type();
  inline void clear_has_session_type();
  inline void set_has_session_id();
  inline void clear_has_session_id();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 user_id_;
  int session_type_;
  ::std::string* attach_data_;
  ::google::protobuf::uint32 session_id_;
  friend void  protobuf_AddDesc_Im_2eBuddy_2eproto();
  friend void protobuf_AssignDesc_Im_2eBuddy_2eproto();
  friend void protobuf_ShutdownFile_Im_2eBuddy_2eproto();

  void InitAsDefaultInstance();
  static RemoveSessionRequest* default_instance_;
};
// -------------------------------------------------------------------

class RemoveSessionResponse : public ::google::protobuf::Message {
 public:
  RemoveSessionResponse();
  virtual ~RemoveSessionResponse();

  RemoveSessionResponse(const RemoveSessionResponse& from);

  inline RemoveSessionResponse& operator=(const RemoveSessionResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveSessionResponse& default_instance();

  void Swap(RemoveSessionResponse* other);

  // implements Message ----------------------------------------------

  RemoveSessionResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RemoveSessionResponse& from);
  void MergeFrom(const RemoveSessionResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required uint32 result_code = 2;
  inline bool has_result_code() const;
  inline void clear_result_code();
  static const int kResultCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 result_code() const;
  inline void set_result_code(::google::protobuf::uint32 value);

  // required .Im.Base.SessionType session_type = 3;
  inline bool has_session_type() const;
  inline void clear_session_type();
  static const int kSessionTypeFieldNumber = 3;
  inline ::Im::Base::SessionType session_type() const;
  inline void set_session_type(::Im::Base::SessionType value);

  // required uint32 session_id = 4;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 4;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);

  // optional bytes attach_data = 5;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 5;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:Im.Buddy.RemoveSessionResponse)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_result_code();
  inline void clear_has_result_code();
  inline void set_has_session_type();
  inline void clear_has_session_type();
  inline void set_has_session_id();
  inline void clear_has_session_id();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 result_code_;
  int session_type_;
  ::google::protobuf::uint32 session_id_;
  ::std::string* attach_data_;
  friend void  protobuf_AddDesc_Im_2eBuddy_2eproto();
  friend void protobuf_AssignDesc_Im_2eBuddy_2eproto();
  friend void protobuf_ShutdownFile_Im_2eBuddy_2eproto();

  void InitAsDefaultInstance();
  static RemoveSessionResponse* default_instance_;
};
// -------------------------------------------------------------------

class AllUserRequest : public ::google::protobuf::Message {
 public:
  AllUserRequest();
  virtual ~AllUserRequest();

  AllUserRequest(const AllUserRequest& from);

  inline AllUserRequest& operator=(const AllUserRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllUserRequest& default_instance();

  void Swap(AllUserRequest* other);

  // implements Message ----------------------------------------------

  AllUserRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AllUserRequest& from);
  void MergeFrom(const AllUserRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required uint32 latest_update_time = 2;
  inline bool has_latest_update_time() const;
  inline void clear_latest_update_time();
  static const int kLatestUpdateTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 latest_update_time() const;
  inline void set_latest_update_time(::google::protobuf::uint32 value);

  // optional bytes attach_data = 3;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 3;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:Im.Buddy.AllUserRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_latest_update_time();
  inline void clear_has_latest_update_time();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 latest_update_time_;
  ::std::string* attach_data_;
  friend void  protobuf_AddDesc_Im_2eBuddy_2eproto();
  friend void protobuf_AssignDesc_Im_2eBuddy_2eproto();
  friend void protobuf_ShutdownFile_Im_2eBuddy_2eproto();

  void InitAsDefaultInstance();
  static AllUserRequest* default_instance_;
};
// -------------------------------------------------------------------

class AllUserResponse : public ::google::protobuf::Message {
 public:
  AllUserResponse();
  virtual ~AllUserResponse();

  AllUserResponse(const AllUserResponse& from);

  inline AllUserResponse& operator=(const AllUserResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const AllUserResponse& default_instance();

  void Swap(AllUserResponse* other);

  // implements Message ----------------------------------------------

  AllUserResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const AllUserResponse& from);
  void MergeFrom(const AllUserResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required uint32 latest_update_time = 2;
  inline bool has_latest_update_time() const;
  inline void clear_latest_update_time();
  static const int kLatestUpdateTimeFieldNumber = 2;
  inline ::google::protobuf::uint32 latest_update_time() const;
  inline void set_latest_update_time(::google::protobuf::uint32 value);

  // repeated .Im.Base.UserInfo user_info_list = 3;
  inline int user_info_list_size() const;
  inline void clear_user_info_list();
  static const int kUserInfoListFieldNumber = 3;
  inline const ::Im::Base::UserInfo& user_info_list(int index) const;
  inline ::Im::Base::UserInfo* mutable_user_info_list(int index);
  inline ::Im::Base::UserInfo* add_user_info_list();
  inline const ::google::protobuf::RepeatedPtrField< ::Im::Base::UserInfo >&
      user_info_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::Im::Base::UserInfo >*
      mutable_user_info_list();

  // optional bytes attach_data = 4;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 4;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:Im.Buddy.AllUserResponse)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_latest_update_time();
  inline void clear_has_latest_update_time();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 latest_update_time_;
  ::google::protobuf::RepeatedPtrField< ::Im::Base::UserInfo > user_info_list_;
  ::std::string* attach_data_;
  friend void  protobuf_AddDesc_Im_2eBuddy_2eproto();
  friend void protobuf_AssignDesc_Im_2eBuddy_2eproto();
  friend void protobuf_ShutdownFile_Im_2eBuddy_2eproto();

  void InitAsDefaultInstance();
  static AllUserResponse* default_instance_;
};
// -------------------------------------------------------------------

class UsersStatusRequest : public ::google::protobuf::Message {
 public:
  UsersStatusRequest();
  virtual ~UsersStatusRequest();

  UsersStatusRequest(const UsersStatusRequest& from);

  inline UsersStatusRequest& operator=(const UsersStatusRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UsersStatusRequest& default_instance();

  void Swap(UsersStatusRequest* other);

  // implements Message ----------------------------------------------

  UsersStatusRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UsersStatusRequest& from);
  void MergeFrom(const UsersStatusRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // repeated uint32 user_id_list = 2;
  inline int user_id_list_size() const;
  inline void clear_user_id_list();
  static const int kUserIdListFieldNumber = 2;
  inline ::google::protobuf::uint32 user_id_list(int index) const;
  inline void set_user_id_list(int index, ::google::protobuf::uint32 value);
  inline void add_user_id_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      user_id_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_user_id_list();

  // optional bytes attach_data = 3;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 3;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:Im.Buddy.UsersStatusRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > user_id_list_;
  ::std::string* attach_data_;
  ::google::protobuf::uint32 user_id_;
  friend void  protobuf_AddDesc_Im_2eBuddy_2eproto();
  friend void protobuf_AssignDesc_Im_2eBuddy_2eproto();
  friend void protobuf_ShutdownFile_Im_2eBuddy_2eproto();

  void InitAsDefaultInstance();
  static UsersStatusRequest* default_instance_;
};
// -------------------------------------------------------------------

class UsersStatusResponse : public ::google::protobuf::Message {
 public:
  UsersStatusResponse();
  virtual ~UsersStatusResponse();

  UsersStatusResponse(const UsersStatusResponse& from);

  inline UsersStatusResponse& operator=(const UsersStatusResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UsersStatusResponse& default_instance();

  void Swap(UsersStatusResponse* other);

  // implements Message ----------------------------------------------

  UsersStatusResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UsersStatusResponse& from);
  void MergeFrom(const UsersStatusResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // repeated .Im.Base.UserStatus user_status_list = 2;
  inline int user_status_list_size() const;
  inline void clear_user_status_list();
  static const int kUserStatusListFieldNumber = 2;
  inline const ::Im::Base::UserStatus& user_status_list(int index) const;
  inline ::Im::Base::UserStatus* mutable_user_status_list(int index);
  inline ::Im::Base::UserStatus* add_user_status_list();
  inline const ::google::protobuf::RepeatedPtrField< ::Im::Base::UserStatus >&
      user_status_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::Im::Base::UserStatus >*
      mutable_user_status_list();

  // optional bytes attach_data = 3;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 3;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:Im.Buddy.UsersStatusResponse)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::RepeatedPtrField< ::Im::Base::UserStatus > user_status_list_;
  ::std::string* attach_data_;
  ::google::protobuf::uint32 user_id_;
  friend void  protobuf_AddDesc_Im_2eBuddy_2eproto();
  friend void protobuf_AssignDesc_Im_2eBuddy_2eproto();
  friend void protobuf_ShutdownFile_Im_2eBuddy_2eproto();

  void InitAsDefaultInstance();
  static UsersStatusResponse* default_instance_;
};
// -------------------------------------------------------------------

class changeAvatarRequest : public ::google::protobuf::Message {
 public:
  changeAvatarRequest();
  virtual ~changeAvatarRequest();

  changeAvatarRequest(const changeAvatarRequest& from);

  inline changeAvatarRequest& operator=(const changeAvatarRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const changeAvatarRequest& default_instance();

  void Swap(changeAvatarRequest* other);

  // implements Message ----------------------------------------------

  changeAvatarRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const changeAvatarRequest& from);
  void MergeFrom(const changeAvatarRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required string avatar_url = 2;
  inline bool has_avatar_url() const;
  inline void clear_avatar_url();
  static const int kAvatarUrlFieldNumber = 2;
  inline const ::std::string& avatar_url() const;
  inline void set_avatar_url(const ::std::string& value);
  inline void set_avatar_url(const char* value);
  inline void set_avatar_url(const char* value, size_t size);
  inline ::std::string* mutable_avatar_url();
  inline ::std::string* release_avatar_url();
  inline void set_allocated_avatar_url(::std::string* avatar_url);

  // optional bytes attach_data = 3;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 3;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:Im.Buddy.changeAvatarRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_avatar_url();
  inline void clear_has_avatar_url();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* avatar_url_;
  ::std::string* attach_data_;
  ::google::protobuf::uint32 user_id_;
  friend void  protobuf_AddDesc_Im_2eBuddy_2eproto();
  friend void protobuf_AssignDesc_Im_2eBuddy_2eproto();
  friend void protobuf_ShutdownFile_Im_2eBuddy_2eproto();

  void InitAsDefaultInstance();
  static changeAvatarRequest* default_instance_;
};
// -------------------------------------------------------------------

class changeAvatarResponse : public ::google::protobuf::Message {
 public:
  changeAvatarResponse();
  virtual ~changeAvatarResponse();

  changeAvatarResponse(const changeAvatarResponse& from);

  inline changeAvatarResponse& operator=(const changeAvatarResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const changeAvatarResponse& default_instance();

  void Swap(changeAvatarResponse* other);

  // implements Message ----------------------------------------------

  changeAvatarResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const changeAvatarResponse& from);
  void MergeFrom(const changeAvatarResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required uint32 result_code = 2;
  inline bool has_result_code() const;
  inline void clear_result_code();
  static const int kResultCodeFieldNumber = 2;
  inline ::google::protobuf::uint32 result_code() const;
  inline void set_result_code(::google::protobuf::uint32 value);

  // optional bytes attach_data = 3;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 3;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:Im.Buddy.changeAvatarResponse)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_result_code();
  inline void clear_has_result_code();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 result_code_;
  ::std::string* attach_data_;
  friend void  protobuf_AddDesc_Im_2eBuddy_2eproto();
  friend void protobuf_AssignDesc_Im_2eBuddy_2eproto();
  friend void protobuf_ShutdownFile_Im_2eBuddy_2eproto();

  void InitAsDefaultInstance();
  static changeAvatarResponse* default_instance_;
};
// -------------------------------------------------------------------

class PcLoginStatusNotify : public ::google::protobuf::Message {
 public:
  PcLoginStatusNotify();
  virtual ~PcLoginStatusNotify();

  PcLoginStatusNotify(const PcLoginStatusNotify& from);

  inline PcLoginStatusNotify& operator=(const PcLoginStatusNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const PcLoginStatusNotify& default_instance();

  void Swap(PcLoginStatusNotify* other);

  // implements Message ----------------------------------------------

  PcLoginStatusNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const PcLoginStatusNotify& from);
  void MergeFrom(const PcLoginStatusNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required .Im.Base.UserStatusType login_status = 2;
  inline bool has_login_status() const;
  inline void clear_login_status();
  static const int kLoginStatusFieldNumber = 2;
  inline ::Im::Base::UserStatusType login_status() const;
  inline void set_login_status(::Im::Base::UserStatusType value);

  // @@protoc_insertion_point(class_scope:Im.Buddy.PcLoginStatusNotify)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_login_status();
  inline void clear_has_login_status();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 user_id_;
  int login_status_;
  friend void  protobuf_AddDesc_Im_2eBuddy_2eproto();
  friend void protobuf_AssignDesc_Im_2eBuddy_2eproto();
  friend void protobuf_ShutdownFile_Im_2eBuddy_2eproto();

  void InitAsDefaultInstance();
  static PcLoginStatusNotify* default_instance_;
};
// -------------------------------------------------------------------

class RemoveSessionNotify : public ::google::protobuf::Message {
 public:
  RemoveSessionNotify();
  virtual ~RemoveSessionNotify();

  RemoveSessionNotify(const RemoveSessionNotify& from);

  inline RemoveSessionNotify& operator=(const RemoveSessionNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const RemoveSessionNotify& default_instance();

  void Swap(RemoveSessionNotify* other);

  // implements Message ----------------------------------------------

  RemoveSessionNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const RemoveSessionNotify& from);
  void MergeFrom(const RemoveSessionNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required .Im.Base.SessionType session_type = 2;
  inline bool has_session_type() const;
  inline void clear_session_type();
  static const int kSessionTypeFieldNumber = 2;
  inline ::Im::Base::SessionType session_type() const;
  inline void set_session_type(::Im::Base::SessionType value);

  // required uint32 session_id = 3;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 3;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Im.Buddy.RemoveSessionNotify)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_session_type();
  inline void clear_has_session_type();
  inline void set_has_session_id();
  inline void clear_has_session_id();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 user_id_;
  int session_type_;
  ::google::protobuf::uint32 session_id_;
  friend void  protobuf_AddDesc_Im_2eBuddy_2eproto();
  friend void protobuf_AssignDesc_Im_2eBuddy_2eproto();
  friend void protobuf_ShutdownFile_Im_2eBuddy_2eproto();

  void InitAsDefaultInstance();
  static RemoveSessionNotify* default_instance_;
};
// ===================================================================


// ===================================================================

// RecentContactSessionRequest

// required uint32 user_id = 1;
inline bool RecentContactSessionRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RecentContactSessionRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RecentContactSessionRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RecentContactSessionRequest::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 RecentContactSessionRequest::user_id() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.RecentContactSessionRequest.user_id)
  return user_id_;
}
inline void RecentContactSessionRequest::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Buddy.RecentContactSessionRequest.user_id)
}

// required uint32 latest_update_time = 2;
inline bool RecentContactSessionRequest::has_latest_update_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RecentContactSessionRequest::set_has_latest_update_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RecentContactSessionRequest::clear_has_latest_update_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RecentContactSessionRequest::clear_latest_update_time() {
  latest_update_time_ = 0u;
  clear_has_latest_update_time();
}
inline ::google::protobuf::uint32 RecentContactSessionRequest::latest_update_time() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.RecentContactSessionRequest.latest_update_time)
  return latest_update_time_;
}
inline void RecentContactSessionRequest::set_latest_update_time(::google::protobuf::uint32 value) {
  set_has_latest_update_time();
  latest_update_time_ = value;
  // @@protoc_insertion_point(field_set:Im.Buddy.RecentContactSessionRequest.latest_update_time)
}

// optional bytes attach_data = 3;
inline bool RecentContactSessionRequest::has_attach_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RecentContactSessionRequest::set_has_attach_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RecentContactSessionRequest::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RecentContactSessionRequest::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& RecentContactSessionRequest::attach_data() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.RecentContactSessionRequest.attach_data)
  return *attach_data_;
}
inline void RecentContactSessionRequest::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:Im.Buddy.RecentContactSessionRequest.attach_data)
}
inline void RecentContactSessionRequest::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Im.Buddy.RecentContactSessionRequest.attach_data)
}
inline void RecentContactSessionRequest::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Im.Buddy.RecentContactSessionRequest.attach_data)
}
inline ::std::string* RecentContactSessionRequest::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Im.Buddy.RecentContactSessionRequest.attach_data)
  return attach_data_;
}
inline ::std::string* RecentContactSessionRequest::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RecentContactSessionRequest::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Im.Buddy.RecentContactSessionRequest.attach_data)
}

// -------------------------------------------------------------------

// RecentContactSessionResponse

// required uint32 user_id = 1;
inline bool RecentContactSessionResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RecentContactSessionResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RecentContactSessionResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RecentContactSessionResponse::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 RecentContactSessionResponse::user_id() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.RecentContactSessionResponse.user_id)
  return user_id_;
}
inline void RecentContactSessionResponse::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Buddy.RecentContactSessionResponse.user_id)
}

// repeated .Im.Base.ContactSessionInfo contact_session_list = 2;
inline int RecentContactSessionResponse::contact_session_list_size() const {
  return contact_session_list_.size();
}
inline void RecentContactSessionResponse::clear_contact_session_list() {
  contact_session_list_.Clear();
}
inline const ::Im::Base::ContactSessionInfo& RecentContactSessionResponse::contact_session_list(int index) const {
  // @@protoc_insertion_point(field_get:Im.Buddy.RecentContactSessionResponse.contact_session_list)
  return contact_session_list_.Get(index);
}
inline ::Im::Base::ContactSessionInfo* RecentContactSessionResponse::mutable_contact_session_list(int index) {
  // @@protoc_insertion_point(field_mutable:Im.Buddy.RecentContactSessionResponse.contact_session_list)
  return contact_session_list_.Mutable(index);
}
inline ::Im::Base::ContactSessionInfo* RecentContactSessionResponse::add_contact_session_list() {
  // @@protoc_insertion_point(field_add:Im.Buddy.RecentContactSessionResponse.contact_session_list)
  return contact_session_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Im::Base::ContactSessionInfo >&
RecentContactSessionResponse::contact_session_list() const {
  // @@protoc_insertion_point(field_list:Im.Buddy.RecentContactSessionResponse.contact_session_list)
  return contact_session_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::Im::Base::ContactSessionInfo >*
RecentContactSessionResponse::mutable_contact_session_list() {
  // @@protoc_insertion_point(field_mutable_list:Im.Buddy.RecentContactSessionResponse.contact_session_list)
  return &contact_session_list_;
}

// optional bytes attach_data = 3;
inline bool RecentContactSessionResponse::has_attach_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RecentContactSessionResponse::set_has_attach_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RecentContactSessionResponse::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RecentContactSessionResponse::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& RecentContactSessionResponse::attach_data() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.RecentContactSessionResponse.attach_data)
  return *attach_data_;
}
inline void RecentContactSessionResponse::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:Im.Buddy.RecentContactSessionResponse.attach_data)
}
inline void RecentContactSessionResponse::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Im.Buddy.RecentContactSessionResponse.attach_data)
}
inline void RecentContactSessionResponse::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Im.Buddy.RecentContactSessionResponse.attach_data)
}
inline ::std::string* RecentContactSessionResponse::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Im.Buddy.RecentContactSessionResponse.attach_data)
  return attach_data_;
}
inline ::std::string* RecentContactSessionResponse::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RecentContactSessionResponse::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Im.Buddy.RecentContactSessionResponse.attach_data)
}

// -------------------------------------------------------------------

// UserStatusNotify

// required .Im.Base.UserStatus user_status = 1;
inline bool UserStatusNotify::has_user_status() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserStatusNotify::set_has_user_status() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserStatusNotify::clear_has_user_status() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserStatusNotify::clear_user_status() {
  if (user_status_ != NULL) user_status_->::Im::Base::UserStatus::Clear();
  clear_has_user_status();
}
inline const ::Im::Base::UserStatus& UserStatusNotify::user_status() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.UserStatusNotify.user_status)
  return user_status_ != NULL ? *user_status_ : *default_instance_->user_status_;
}
inline ::Im::Base::UserStatus* UserStatusNotify::mutable_user_status() {
  set_has_user_status();
  if (user_status_ == NULL) user_status_ = new ::Im::Base::UserStatus;
  // @@protoc_insertion_point(field_mutable:Im.Buddy.UserStatusNotify.user_status)
  return user_status_;
}
inline ::Im::Base::UserStatus* UserStatusNotify::release_user_status() {
  clear_has_user_status();
  ::Im::Base::UserStatus* temp = user_status_;
  user_status_ = NULL;
  return temp;
}
inline void UserStatusNotify::set_allocated_user_status(::Im::Base::UserStatus* user_status) {
  delete user_status_;
  user_status_ = user_status;
  if (user_status) {
    set_has_user_status();
  } else {
    clear_has_user_status();
  }
  // @@protoc_insertion_point(field_set_allocated:Im.Buddy.UserStatusNotify.user_status)
}

// -------------------------------------------------------------------

// UserInfoRequest

// required uint32 user_id = 1;
inline bool UserInfoRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserInfoRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserInfoRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserInfoRequest::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 UserInfoRequest::user_id() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.UserInfoRequest.user_id)
  return user_id_;
}
inline void UserInfoRequest::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Buddy.UserInfoRequest.user_id)
}

// repeated uint32 user_id_list = 2;
inline int UserInfoRequest::user_id_list_size() const {
  return user_id_list_.size();
}
inline void UserInfoRequest::clear_user_id_list() {
  user_id_list_.Clear();
}
inline ::google::protobuf::uint32 UserInfoRequest::user_id_list(int index) const {
  // @@protoc_insertion_point(field_get:Im.Buddy.UserInfoRequest.user_id_list)
  return user_id_list_.Get(index);
}
inline void UserInfoRequest::set_user_id_list(int index, ::google::protobuf::uint32 value) {
  user_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:Im.Buddy.UserInfoRequest.user_id_list)
}
inline void UserInfoRequest::add_user_id_list(::google::protobuf::uint32 value) {
  user_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:Im.Buddy.UserInfoRequest.user_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UserInfoRequest::user_id_list() const {
  // @@protoc_insertion_point(field_list:Im.Buddy.UserInfoRequest.user_id_list)
  return user_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UserInfoRequest::mutable_user_id_list() {
  // @@protoc_insertion_point(field_mutable_list:Im.Buddy.UserInfoRequest.user_id_list)
  return &user_id_list_;
}

// optional bytes attach_data = 3;
inline bool UserInfoRequest::has_attach_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserInfoRequest::set_has_attach_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserInfoRequest::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserInfoRequest::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& UserInfoRequest::attach_data() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.UserInfoRequest.attach_data)
  return *attach_data_;
}
inline void UserInfoRequest::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:Im.Buddy.UserInfoRequest.attach_data)
}
inline void UserInfoRequest::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Im.Buddy.UserInfoRequest.attach_data)
}
inline void UserInfoRequest::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Im.Buddy.UserInfoRequest.attach_data)
}
inline ::std::string* UserInfoRequest::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Im.Buddy.UserInfoRequest.attach_data)
  return attach_data_;
}
inline ::std::string* UserInfoRequest::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UserInfoRequest::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Im.Buddy.UserInfoRequest.attach_data)
}

// -------------------------------------------------------------------

// UserInfoResponse

// required uint32 user_id = 1;
inline bool UserInfoResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UserInfoResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UserInfoResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UserInfoResponse::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 UserInfoResponse::user_id() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.UserInfoResponse.user_id)
  return user_id_;
}
inline void UserInfoResponse::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Buddy.UserInfoResponse.user_id)
}

// repeated .Im.Base.UserInfo user_info_list = 2;
inline int UserInfoResponse::user_info_list_size() const {
  return user_info_list_.size();
}
inline void UserInfoResponse::clear_user_info_list() {
  user_info_list_.Clear();
}
inline const ::Im::Base::UserInfo& UserInfoResponse::user_info_list(int index) const {
  // @@protoc_insertion_point(field_get:Im.Buddy.UserInfoResponse.user_info_list)
  return user_info_list_.Get(index);
}
inline ::Im::Base::UserInfo* UserInfoResponse::mutable_user_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:Im.Buddy.UserInfoResponse.user_info_list)
  return user_info_list_.Mutable(index);
}
inline ::Im::Base::UserInfo* UserInfoResponse::add_user_info_list() {
  // @@protoc_insertion_point(field_add:Im.Buddy.UserInfoResponse.user_info_list)
  return user_info_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Im::Base::UserInfo >&
UserInfoResponse::user_info_list() const {
  // @@protoc_insertion_point(field_list:Im.Buddy.UserInfoResponse.user_info_list)
  return user_info_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::Im::Base::UserInfo >*
UserInfoResponse::mutable_user_info_list() {
  // @@protoc_insertion_point(field_mutable_list:Im.Buddy.UserInfoResponse.user_info_list)
  return &user_info_list_;
}

// optional bytes attach_data = 3;
inline bool UserInfoResponse::has_attach_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UserInfoResponse::set_has_attach_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UserInfoResponse::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UserInfoResponse::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& UserInfoResponse::attach_data() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.UserInfoResponse.attach_data)
  return *attach_data_;
}
inline void UserInfoResponse::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:Im.Buddy.UserInfoResponse.attach_data)
}
inline void UserInfoResponse::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Im.Buddy.UserInfoResponse.attach_data)
}
inline void UserInfoResponse::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Im.Buddy.UserInfoResponse.attach_data)
}
inline ::std::string* UserInfoResponse::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Im.Buddy.UserInfoResponse.attach_data)
  return attach_data_;
}
inline ::std::string* UserInfoResponse::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UserInfoResponse::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Im.Buddy.UserInfoResponse.attach_data)
}

// -------------------------------------------------------------------

// RemoveSessionRequest

// required uint32 user_id = 1;
inline bool RemoveSessionRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RemoveSessionRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RemoveSessionRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RemoveSessionRequest::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 RemoveSessionRequest::user_id() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.RemoveSessionRequest.user_id)
  return user_id_;
}
inline void RemoveSessionRequest::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Buddy.RemoveSessionRequest.user_id)
}

// required .Im.Base.SessionType session_type = 2;
inline bool RemoveSessionRequest::has_session_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RemoveSessionRequest::set_has_session_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RemoveSessionRequest::clear_has_session_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RemoveSessionRequest::clear_session_type() {
  session_type_ = 1;
  clear_has_session_type();
}
inline ::Im::Base::SessionType RemoveSessionRequest::session_type() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.RemoveSessionRequest.session_type)
  return static_cast< ::Im::Base::SessionType >(session_type_);
}
inline void RemoveSessionRequest::set_session_type(::Im::Base::SessionType value) {
  assert(::Im::Base::SessionType_IsValid(value));
  set_has_session_type();
  session_type_ = value;
  // @@protoc_insertion_point(field_set:Im.Buddy.RemoveSessionRequest.session_type)
}

// required uint32 session_id = 3;
inline bool RemoveSessionRequest::has_session_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RemoveSessionRequest::set_has_session_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RemoveSessionRequest::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RemoveSessionRequest::clear_session_id() {
  session_id_ = 0u;
  clear_has_session_id();
}
inline ::google::protobuf::uint32 RemoveSessionRequest::session_id() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.RemoveSessionRequest.session_id)
  return session_id_;
}
inline void RemoveSessionRequest::set_session_id(::google::protobuf::uint32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Buddy.RemoveSessionRequest.session_id)
}

// optional bytes attach_data = 4;
inline bool RemoveSessionRequest::has_attach_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RemoveSessionRequest::set_has_attach_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RemoveSessionRequest::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RemoveSessionRequest::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& RemoveSessionRequest::attach_data() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.RemoveSessionRequest.attach_data)
  return *attach_data_;
}
inline void RemoveSessionRequest::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:Im.Buddy.RemoveSessionRequest.attach_data)
}
inline void RemoveSessionRequest::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Im.Buddy.RemoveSessionRequest.attach_data)
}
inline void RemoveSessionRequest::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Im.Buddy.RemoveSessionRequest.attach_data)
}
inline ::std::string* RemoveSessionRequest::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Im.Buddy.RemoveSessionRequest.attach_data)
  return attach_data_;
}
inline ::std::string* RemoveSessionRequest::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RemoveSessionRequest::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Im.Buddy.RemoveSessionRequest.attach_data)
}

// -------------------------------------------------------------------

// RemoveSessionResponse

// required uint32 user_id = 1;
inline bool RemoveSessionResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RemoveSessionResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RemoveSessionResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RemoveSessionResponse::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 RemoveSessionResponse::user_id() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.RemoveSessionResponse.user_id)
  return user_id_;
}
inline void RemoveSessionResponse::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Buddy.RemoveSessionResponse.user_id)
}

// required uint32 result_code = 2;
inline bool RemoveSessionResponse::has_result_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RemoveSessionResponse::set_has_result_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RemoveSessionResponse::clear_has_result_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RemoveSessionResponse::clear_result_code() {
  result_code_ = 0u;
  clear_has_result_code();
}
inline ::google::protobuf::uint32 RemoveSessionResponse::result_code() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.RemoveSessionResponse.result_code)
  return result_code_;
}
inline void RemoveSessionResponse::set_result_code(::google::protobuf::uint32 value) {
  set_has_result_code();
  result_code_ = value;
  // @@protoc_insertion_point(field_set:Im.Buddy.RemoveSessionResponse.result_code)
}

// required .Im.Base.SessionType session_type = 3;
inline bool RemoveSessionResponse::has_session_type() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RemoveSessionResponse::set_has_session_type() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RemoveSessionResponse::clear_has_session_type() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RemoveSessionResponse::clear_session_type() {
  session_type_ = 1;
  clear_has_session_type();
}
inline ::Im::Base::SessionType RemoveSessionResponse::session_type() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.RemoveSessionResponse.session_type)
  return static_cast< ::Im::Base::SessionType >(session_type_);
}
inline void RemoveSessionResponse::set_session_type(::Im::Base::SessionType value) {
  assert(::Im::Base::SessionType_IsValid(value));
  set_has_session_type();
  session_type_ = value;
  // @@protoc_insertion_point(field_set:Im.Buddy.RemoveSessionResponse.session_type)
}

// required uint32 session_id = 4;
inline bool RemoveSessionResponse::has_session_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void RemoveSessionResponse::set_has_session_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void RemoveSessionResponse::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void RemoveSessionResponse::clear_session_id() {
  session_id_ = 0u;
  clear_has_session_id();
}
inline ::google::protobuf::uint32 RemoveSessionResponse::session_id() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.RemoveSessionResponse.session_id)
  return session_id_;
}
inline void RemoveSessionResponse::set_session_id(::google::protobuf::uint32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Buddy.RemoveSessionResponse.session_id)
}

// optional bytes attach_data = 5;
inline bool RemoveSessionResponse::has_attach_data() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void RemoveSessionResponse::set_has_attach_data() {
  _has_bits_[0] |= 0x00000010u;
}
inline void RemoveSessionResponse::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void RemoveSessionResponse::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& RemoveSessionResponse::attach_data() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.RemoveSessionResponse.attach_data)
  return *attach_data_;
}
inline void RemoveSessionResponse::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:Im.Buddy.RemoveSessionResponse.attach_data)
}
inline void RemoveSessionResponse::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Im.Buddy.RemoveSessionResponse.attach_data)
}
inline void RemoveSessionResponse::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Im.Buddy.RemoveSessionResponse.attach_data)
}
inline ::std::string* RemoveSessionResponse::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Im.Buddy.RemoveSessionResponse.attach_data)
  return attach_data_;
}
inline ::std::string* RemoveSessionResponse::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void RemoveSessionResponse::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Im.Buddy.RemoveSessionResponse.attach_data)
}

// -------------------------------------------------------------------

// AllUserRequest

// required uint32 user_id = 1;
inline bool AllUserRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AllUserRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AllUserRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AllUserRequest::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 AllUserRequest::user_id() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.AllUserRequest.user_id)
  return user_id_;
}
inline void AllUserRequest::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Buddy.AllUserRequest.user_id)
}

// required uint32 latest_update_time = 2;
inline bool AllUserRequest::has_latest_update_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AllUserRequest::set_has_latest_update_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AllUserRequest::clear_has_latest_update_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AllUserRequest::clear_latest_update_time() {
  latest_update_time_ = 0u;
  clear_has_latest_update_time();
}
inline ::google::protobuf::uint32 AllUserRequest::latest_update_time() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.AllUserRequest.latest_update_time)
  return latest_update_time_;
}
inline void AllUserRequest::set_latest_update_time(::google::protobuf::uint32 value) {
  set_has_latest_update_time();
  latest_update_time_ = value;
  // @@protoc_insertion_point(field_set:Im.Buddy.AllUserRequest.latest_update_time)
}

// optional bytes attach_data = 3;
inline bool AllUserRequest::has_attach_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void AllUserRequest::set_has_attach_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void AllUserRequest::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void AllUserRequest::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& AllUserRequest::attach_data() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.AllUserRequest.attach_data)
  return *attach_data_;
}
inline void AllUserRequest::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:Im.Buddy.AllUserRequest.attach_data)
}
inline void AllUserRequest::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Im.Buddy.AllUserRequest.attach_data)
}
inline void AllUserRequest::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Im.Buddy.AllUserRequest.attach_data)
}
inline ::std::string* AllUserRequest::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Im.Buddy.AllUserRequest.attach_data)
  return attach_data_;
}
inline ::std::string* AllUserRequest::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AllUserRequest::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Im.Buddy.AllUserRequest.attach_data)
}

// -------------------------------------------------------------------

// AllUserResponse

// required uint32 user_id = 1;
inline bool AllUserResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void AllUserResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void AllUserResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void AllUserResponse::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 AllUserResponse::user_id() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.AllUserResponse.user_id)
  return user_id_;
}
inline void AllUserResponse::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Buddy.AllUserResponse.user_id)
}

// required uint32 latest_update_time = 2;
inline bool AllUserResponse::has_latest_update_time() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void AllUserResponse::set_has_latest_update_time() {
  _has_bits_[0] |= 0x00000002u;
}
inline void AllUserResponse::clear_has_latest_update_time() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void AllUserResponse::clear_latest_update_time() {
  latest_update_time_ = 0u;
  clear_has_latest_update_time();
}
inline ::google::protobuf::uint32 AllUserResponse::latest_update_time() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.AllUserResponse.latest_update_time)
  return latest_update_time_;
}
inline void AllUserResponse::set_latest_update_time(::google::protobuf::uint32 value) {
  set_has_latest_update_time();
  latest_update_time_ = value;
  // @@protoc_insertion_point(field_set:Im.Buddy.AllUserResponse.latest_update_time)
}

// repeated .Im.Base.UserInfo user_info_list = 3;
inline int AllUserResponse::user_info_list_size() const {
  return user_info_list_.size();
}
inline void AllUserResponse::clear_user_info_list() {
  user_info_list_.Clear();
}
inline const ::Im::Base::UserInfo& AllUserResponse::user_info_list(int index) const {
  // @@protoc_insertion_point(field_get:Im.Buddy.AllUserResponse.user_info_list)
  return user_info_list_.Get(index);
}
inline ::Im::Base::UserInfo* AllUserResponse::mutable_user_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:Im.Buddy.AllUserResponse.user_info_list)
  return user_info_list_.Mutable(index);
}
inline ::Im::Base::UserInfo* AllUserResponse::add_user_info_list() {
  // @@protoc_insertion_point(field_add:Im.Buddy.AllUserResponse.user_info_list)
  return user_info_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Im::Base::UserInfo >&
AllUserResponse::user_info_list() const {
  // @@protoc_insertion_point(field_list:Im.Buddy.AllUserResponse.user_info_list)
  return user_info_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::Im::Base::UserInfo >*
AllUserResponse::mutable_user_info_list() {
  // @@protoc_insertion_point(field_mutable_list:Im.Buddy.AllUserResponse.user_info_list)
  return &user_info_list_;
}

// optional bytes attach_data = 4;
inline bool AllUserResponse::has_attach_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void AllUserResponse::set_has_attach_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void AllUserResponse::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void AllUserResponse::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& AllUserResponse::attach_data() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.AllUserResponse.attach_data)
  return *attach_data_;
}
inline void AllUserResponse::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:Im.Buddy.AllUserResponse.attach_data)
}
inline void AllUserResponse::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Im.Buddy.AllUserResponse.attach_data)
}
inline void AllUserResponse::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Im.Buddy.AllUserResponse.attach_data)
}
inline ::std::string* AllUserResponse::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Im.Buddy.AllUserResponse.attach_data)
  return attach_data_;
}
inline ::std::string* AllUserResponse::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void AllUserResponse::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Im.Buddy.AllUserResponse.attach_data)
}

// -------------------------------------------------------------------

// UsersStatusRequest

// required uint32 user_id = 1;
inline bool UsersStatusRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UsersStatusRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UsersStatusRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UsersStatusRequest::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 UsersStatusRequest::user_id() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.UsersStatusRequest.user_id)
  return user_id_;
}
inline void UsersStatusRequest::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Buddy.UsersStatusRequest.user_id)
}

// repeated uint32 user_id_list = 2;
inline int UsersStatusRequest::user_id_list_size() const {
  return user_id_list_.size();
}
inline void UsersStatusRequest::clear_user_id_list() {
  user_id_list_.Clear();
}
inline ::google::protobuf::uint32 UsersStatusRequest::user_id_list(int index) const {
  // @@protoc_insertion_point(field_get:Im.Buddy.UsersStatusRequest.user_id_list)
  return user_id_list_.Get(index);
}
inline void UsersStatusRequest::set_user_id_list(int index, ::google::protobuf::uint32 value) {
  user_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:Im.Buddy.UsersStatusRequest.user_id_list)
}
inline void UsersStatusRequest::add_user_id_list(::google::protobuf::uint32 value) {
  user_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:Im.Buddy.UsersStatusRequest.user_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
UsersStatusRequest::user_id_list() const {
  // @@protoc_insertion_point(field_list:Im.Buddy.UsersStatusRequest.user_id_list)
  return user_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
UsersStatusRequest::mutable_user_id_list() {
  // @@protoc_insertion_point(field_mutable_list:Im.Buddy.UsersStatusRequest.user_id_list)
  return &user_id_list_;
}

// optional bytes attach_data = 3;
inline bool UsersStatusRequest::has_attach_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UsersStatusRequest::set_has_attach_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UsersStatusRequest::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UsersStatusRequest::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& UsersStatusRequest::attach_data() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.UsersStatusRequest.attach_data)
  return *attach_data_;
}
inline void UsersStatusRequest::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:Im.Buddy.UsersStatusRequest.attach_data)
}
inline void UsersStatusRequest::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Im.Buddy.UsersStatusRequest.attach_data)
}
inline void UsersStatusRequest::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Im.Buddy.UsersStatusRequest.attach_data)
}
inline ::std::string* UsersStatusRequest::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Im.Buddy.UsersStatusRequest.attach_data)
  return attach_data_;
}
inline ::std::string* UsersStatusRequest::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UsersStatusRequest::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Im.Buddy.UsersStatusRequest.attach_data)
}

// -------------------------------------------------------------------

// UsersStatusResponse

// required uint32 user_id = 1;
inline bool UsersStatusResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UsersStatusResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UsersStatusResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UsersStatusResponse::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 UsersStatusResponse::user_id() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.UsersStatusResponse.user_id)
  return user_id_;
}
inline void UsersStatusResponse::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Buddy.UsersStatusResponse.user_id)
}

// repeated .Im.Base.UserStatus user_status_list = 2;
inline int UsersStatusResponse::user_status_list_size() const {
  return user_status_list_.size();
}
inline void UsersStatusResponse::clear_user_status_list() {
  user_status_list_.Clear();
}
inline const ::Im::Base::UserStatus& UsersStatusResponse::user_status_list(int index) const {
  // @@protoc_insertion_point(field_get:Im.Buddy.UsersStatusResponse.user_status_list)
  return user_status_list_.Get(index);
}
inline ::Im::Base::UserStatus* UsersStatusResponse::mutable_user_status_list(int index) {
  // @@protoc_insertion_point(field_mutable:Im.Buddy.UsersStatusResponse.user_status_list)
  return user_status_list_.Mutable(index);
}
inline ::Im::Base::UserStatus* UsersStatusResponse::add_user_status_list() {
  // @@protoc_insertion_point(field_add:Im.Buddy.UsersStatusResponse.user_status_list)
  return user_status_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Im::Base::UserStatus >&
UsersStatusResponse::user_status_list() const {
  // @@protoc_insertion_point(field_list:Im.Buddy.UsersStatusResponse.user_status_list)
  return user_status_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::Im::Base::UserStatus >*
UsersStatusResponse::mutable_user_status_list() {
  // @@protoc_insertion_point(field_mutable_list:Im.Buddy.UsersStatusResponse.user_status_list)
  return &user_status_list_;
}

// optional bytes attach_data = 3;
inline bool UsersStatusResponse::has_attach_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void UsersStatusResponse::set_has_attach_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void UsersStatusResponse::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void UsersStatusResponse::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& UsersStatusResponse::attach_data() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.UsersStatusResponse.attach_data)
  return *attach_data_;
}
inline void UsersStatusResponse::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:Im.Buddy.UsersStatusResponse.attach_data)
}
inline void UsersStatusResponse::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Im.Buddy.UsersStatusResponse.attach_data)
}
inline void UsersStatusResponse::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Im.Buddy.UsersStatusResponse.attach_data)
}
inline ::std::string* UsersStatusResponse::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Im.Buddy.UsersStatusResponse.attach_data)
  return attach_data_;
}
inline ::std::string* UsersStatusResponse::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UsersStatusResponse::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Im.Buddy.UsersStatusResponse.attach_data)
}

// -------------------------------------------------------------------

// changeAvatarRequest

// required uint32 user_id = 1;
inline bool changeAvatarRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void changeAvatarRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void changeAvatarRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void changeAvatarRequest::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 changeAvatarRequest::user_id() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.changeAvatarRequest.user_id)
  return user_id_;
}
inline void changeAvatarRequest::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Buddy.changeAvatarRequest.user_id)
}

// required string avatar_url = 2;
inline bool changeAvatarRequest::has_avatar_url() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void changeAvatarRequest::set_has_avatar_url() {
  _has_bits_[0] |= 0x00000002u;
}
inline void changeAvatarRequest::clear_has_avatar_url() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void changeAvatarRequest::clear_avatar_url() {
  if (avatar_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_url_->clear();
  }
  clear_has_avatar_url();
}
inline const ::std::string& changeAvatarRequest::avatar_url() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.changeAvatarRequest.avatar_url)
  return *avatar_url_;
}
inline void changeAvatarRequest::set_avatar_url(const ::std::string& value) {
  set_has_avatar_url();
  if (avatar_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_url_ = new ::std::string;
  }
  avatar_url_->assign(value);
  // @@protoc_insertion_point(field_set:Im.Buddy.changeAvatarRequest.avatar_url)
}
inline void changeAvatarRequest::set_avatar_url(const char* value) {
  set_has_avatar_url();
  if (avatar_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_url_ = new ::std::string;
  }
  avatar_url_->assign(value);
  // @@protoc_insertion_point(field_set_char:Im.Buddy.changeAvatarRequest.avatar_url)
}
inline void changeAvatarRequest::set_avatar_url(const char* value, size_t size) {
  set_has_avatar_url();
  if (avatar_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_url_ = new ::std::string;
  }
  avatar_url_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Im.Buddy.changeAvatarRequest.avatar_url)
}
inline ::std::string* changeAvatarRequest::mutable_avatar_url() {
  set_has_avatar_url();
  if (avatar_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    avatar_url_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Im.Buddy.changeAvatarRequest.avatar_url)
  return avatar_url_;
}
inline ::std::string* changeAvatarRequest::release_avatar_url() {
  clear_has_avatar_url();
  if (avatar_url_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = avatar_url_;
    avatar_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void changeAvatarRequest::set_allocated_avatar_url(::std::string* avatar_url) {
  if (avatar_url_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete avatar_url_;
  }
  if (avatar_url) {
    set_has_avatar_url();
    avatar_url_ = avatar_url;
  } else {
    clear_has_avatar_url();
    avatar_url_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Im.Buddy.changeAvatarRequest.avatar_url)
}

// optional bytes attach_data = 3;
inline bool changeAvatarRequest::has_attach_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void changeAvatarRequest::set_has_attach_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void changeAvatarRequest::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void changeAvatarRequest::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& changeAvatarRequest::attach_data() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.changeAvatarRequest.attach_data)
  return *attach_data_;
}
inline void changeAvatarRequest::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:Im.Buddy.changeAvatarRequest.attach_data)
}
inline void changeAvatarRequest::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Im.Buddy.changeAvatarRequest.attach_data)
}
inline void changeAvatarRequest::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Im.Buddy.changeAvatarRequest.attach_data)
}
inline ::std::string* changeAvatarRequest::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Im.Buddy.changeAvatarRequest.attach_data)
  return attach_data_;
}
inline ::std::string* changeAvatarRequest::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void changeAvatarRequest::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Im.Buddy.changeAvatarRequest.attach_data)
}

// -------------------------------------------------------------------

// changeAvatarResponse

// required uint32 user_id = 1;
inline bool changeAvatarResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void changeAvatarResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void changeAvatarResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void changeAvatarResponse::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 changeAvatarResponse::user_id() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.changeAvatarResponse.user_id)
  return user_id_;
}
inline void changeAvatarResponse::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Buddy.changeAvatarResponse.user_id)
}

// required uint32 result_code = 2;
inline bool changeAvatarResponse::has_result_code() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void changeAvatarResponse::set_has_result_code() {
  _has_bits_[0] |= 0x00000002u;
}
inline void changeAvatarResponse::clear_has_result_code() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void changeAvatarResponse::clear_result_code() {
  result_code_ = 0u;
  clear_has_result_code();
}
inline ::google::protobuf::uint32 changeAvatarResponse::result_code() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.changeAvatarResponse.result_code)
  return result_code_;
}
inline void changeAvatarResponse::set_result_code(::google::protobuf::uint32 value) {
  set_has_result_code();
  result_code_ = value;
  // @@protoc_insertion_point(field_set:Im.Buddy.changeAvatarResponse.result_code)
}

// optional bytes attach_data = 3;
inline bool changeAvatarResponse::has_attach_data() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void changeAvatarResponse::set_has_attach_data() {
  _has_bits_[0] |= 0x00000004u;
}
inline void changeAvatarResponse::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void changeAvatarResponse::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& changeAvatarResponse::attach_data() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.changeAvatarResponse.attach_data)
  return *attach_data_;
}
inline void changeAvatarResponse::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:Im.Buddy.changeAvatarResponse.attach_data)
}
inline void changeAvatarResponse::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Im.Buddy.changeAvatarResponse.attach_data)
}
inline void changeAvatarResponse::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Im.Buddy.changeAvatarResponse.attach_data)
}
inline ::std::string* changeAvatarResponse::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Im.Buddy.changeAvatarResponse.attach_data)
  return attach_data_;
}
inline ::std::string* changeAvatarResponse::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void changeAvatarResponse::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Im.Buddy.changeAvatarResponse.attach_data)
}

// -------------------------------------------------------------------

// PcLoginStatusNotify

// required uint32 user_id = 1;
inline bool PcLoginStatusNotify::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void PcLoginStatusNotify::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void PcLoginStatusNotify::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void PcLoginStatusNotify::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 PcLoginStatusNotify::user_id() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.PcLoginStatusNotify.user_id)
  return user_id_;
}
inline void PcLoginStatusNotify::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Buddy.PcLoginStatusNotify.user_id)
}

// required .Im.Base.UserStatusType login_status = 2;
inline bool PcLoginStatusNotify::has_login_status() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void PcLoginStatusNotify::set_has_login_status() {
  _has_bits_[0] |= 0x00000002u;
}
inline void PcLoginStatusNotify::clear_has_login_status() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void PcLoginStatusNotify::clear_login_status() {
  login_status_ = 1;
  clear_has_login_status();
}
inline ::Im::Base::UserStatusType PcLoginStatusNotify::login_status() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.PcLoginStatusNotify.login_status)
  return static_cast< ::Im::Base::UserStatusType >(login_status_);
}
inline void PcLoginStatusNotify::set_login_status(::Im::Base::UserStatusType value) {
  assert(::Im::Base::UserStatusType_IsValid(value));
  set_has_login_status();
  login_status_ = value;
  // @@protoc_insertion_point(field_set:Im.Buddy.PcLoginStatusNotify.login_status)
}

// -------------------------------------------------------------------

// RemoveSessionNotify

// required uint32 user_id = 1;
inline bool RemoveSessionNotify::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void RemoveSessionNotify::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void RemoveSessionNotify::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void RemoveSessionNotify::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 RemoveSessionNotify::user_id() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.RemoveSessionNotify.user_id)
  return user_id_;
}
inline void RemoveSessionNotify::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Buddy.RemoveSessionNotify.user_id)
}

// required .Im.Base.SessionType session_type = 2;
inline bool RemoveSessionNotify::has_session_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void RemoveSessionNotify::set_has_session_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void RemoveSessionNotify::clear_has_session_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void RemoveSessionNotify::clear_session_type() {
  session_type_ = 1;
  clear_has_session_type();
}
inline ::Im::Base::SessionType RemoveSessionNotify::session_type() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.RemoveSessionNotify.session_type)
  return static_cast< ::Im::Base::SessionType >(session_type_);
}
inline void RemoveSessionNotify::set_session_type(::Im::Base::SessionType value) {
  assert(::Im::Base::SessionType_IsValid(value));
  set_has_session_type();
  session_type_ = value;
  // @@protoc_insertion_point(field_set:Im.Buddy.RemoveSessionNotify.session_type)
}

// required uint32 session_id = 3;
inline bool RemoveSessionNotify::has_session_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void RemoveSessionNotify::set_has_session_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void RemoveSessionNotify::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void RemoveSessionNotify::clear_session_id() {
  session_id_ = 0u;
  clear_has_session_id();
}
inline ::google::protobuf::uint32 RemoveSessionNotify::session_id() const {
  // @@protoc_insertion_point(field_get:Im.Buddy.RemoveSessionNotify.session_id)
  return session_id_;
}
inline void RemoveSessionNotify::set_session_id(::google::protobuf::uint32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Buddy.RemoveSessionNotify.session_id)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Buddy
}  // namespace Im

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Im_2eBuddy_2eproto__INCLUDED
