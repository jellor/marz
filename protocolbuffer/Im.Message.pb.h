// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Im.Message.proto

#ifndef PROTOBUF_Im_2eMessage_2eproto__INCLUDED
#define PROTOBUF_Im_2eMessage_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
#include "Im.Base.pb.h"
// @@protoc_insertion_point(includes)

namespace Im {
namespace Message {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Im_2eMessage_2eproto();
void protobuf_AssignDesc_Im_2eMessage_2eproto();
void protobuf_ShutdownFile_Im_2eMessage_2eproto();

class MessageData;
class MessageDataAck;
class MessageDataReadAck;
class MessageDataReadNotify;
class ClientTimeRequest;
class ClientTimeResponse;
class UnreadMsgCntRequest;
class UnreadMsgCntResponse;
class GetMsgListRequest;
class GetMsgListResponse;
class GetLatestMsgIdResquest;
class GetLatestMsgIdResponse;
class GetMsgByIdRequest;
class GetMsgByIdResponse;

// ===================================================================

class MessageData : public ::google::protobuf::Message {
 public:
  MessageData();
  virtual ~MessageData();

  MessageData(const MessageData& from);

  inline MessageData& operator=(const MessageData& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageData& default_instance();

  void Swap(MessageData* other);

  // implements Message ----------------------------------------------

  MessageData* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageData& from);
  void MergeFrom(const MessageData& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 msg_id = 1;
  inline bool has_msg_id() const;
  inline void clear_msg_id();
  static const int kMsgIdFieldNumber = 1;
  inline ::google::protobuf::uint32 msg_id() const;
  inline void set_msg_id(::google::protobuf::uint32 value);

  // required uint32 from_user_id = 2;
  inline bool has_from_user_id() const;
  inline void clear_from_user_id();
  static const int kFromUserIdFieldNumber = 2;
  inline ::google::protobuf::uint32 from_user_id() const;
  inline void set_from_user_id(::google::protobuf::uint32 value);

  // required uint32 to_session_id = 3;
  inline bool has_to_session_id() const;
  inline void clear_to_session_id();
  static const int kToSessionIdFieldNumber = 3;
  inline ::google::protobuf::uint32 to_session_id() const;
  inline void set_to_session_id(::google::protobuf::uint32 value);

  // required uint32 create_time = 4;
  inline bool has_create_time() const;
  inline void clear_create_time();
  static const int kCreateTimeFieldNumber = 4;
  inline ::google::protobuf::uint32 create_time() const;
  inline void set_create_time(::google::protobuf::uint32 value);

  // required .Im.Base.MsgType msg_type = 5;
  inline bool has_msg_type() const;
  inline void clear_msg_type();
  static const int kMsgTypeFieldNumber = 5;
  inline ::Im::Base::MsgType msg_type() const;
  inline void set_msg_type(::Im::Base::MsgType value);

  // required bytes msg_data = 6;
  inline bool has_msg_data() const;
  inline void clear_msg_data();
  static const int kMsgDataFieldNumber = 6;
  inline const ::std::string& msg_data() const;
  inline void set_msg_data(const ::std::string& value);
  inline void set_msg_data(const char* value);
  inline void set_msg_data(const void* value, size_t size);
  inline ::std::string* mutable_msg_data();
  inline ::std::string* release_msg_data();
  inline void set_allocated_msg_data(::std::string* msg_data);

  // optional bytes attach_data = 7;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 7;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:Im.Message.MessageData)
 private:
  inline void set_has_msg_id();
  inline void clear_has_msg_id();
  inline void set_has_from_user_id();
  inline void clear_has_from_user_id();
  inline void set_has_to_session_id();
  inline void clear_has_to_session_id();
  inline void set_has_create_time();
  inline void clear_has_create_time();
  inline void set_has_msg_type();
  inline void clear_has_msg_type();
  inline void set_has_msg_data();
  inline void clear_has_msg_data();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 msg_id_;
  ::google::protobuf::uint32 from_user_id_;
  ::google::protobuf::uint32 to_session_id_;
  ::google::protobuf::uint32 create_time_;
  ::std::string* msg_data_;
  ::std::string* attach_data_;
  int msg_type_;
  friend void  protobuf_AddDesc_Im_2eMessage_2eproto();
  friend void protobuf_AssignDesc_Im_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_Im_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static MessageData* default_instance_;
};
// -------------------------------------------------------------------

class MessageDataAck : public ::google::protobuf::Message {
 public:
  MessageDataAck();
  virtual ~MessageDataAck();

  MessageDataAck(const MessageDataAck& from);

  inline MessageDataAck& operator=(const MessageDataAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageDataAck& default_instance();

  void Swap(MessageDataAck* other);

  // implements Message ----------------------------------------------

  MessageDataAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageDataAck& from);
  void MergeFrom(const MessageDataAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required uint32 session_id = 2;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 2;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);

  // required uint32 msg_id = 3;
  inline bool has_msg_id() const;
  inline void clear_msg_id();
  static const int kMsgIdFieldNumber = 3;
  inline ::google::protobuf::uint32 msg_id() const;
  inline void set_msg_id(::google::protobuf::uint32 value);

  // required .Im.Base.SessionType session_type = 4;
  inline bool has_session_type() const;
  inline void clear_session_type();
  static const int kSessionTypeFieldNumber = 4;
  inline ::Im::Base::SessionType session_type() const;
  inline void set_session_type(::Im::Base::SessionType value);

  // @@protoc_insertion_point(class_scope:Im.Message.MessageDataAck)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_session_id();
  inline void clear_has_session_id();
  inline void set_has_msg_id();
  inline void clear_has_msg_id();
  inline void set_has_session_type();
  inline void clear_has_session_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 msg_id_;
  int session_type_;
  friend void  protobuf_AddDesc_Im_2eMessage_2eproto();
  friend void protobuf_AssignDesc_Im_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_Im_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static MessageDataAck* default_instance_;
};
// -------------------------------------------------------------------

class MessageDataReadAck : public ::google::protobuf::Message {
 public:
  MessageDataReadAck();
  virtual ~MessageDataReadAck();

  MessageDataReadAck(const MessageDataReadAck& from);

  inline MessageDataReadAck& operator=(const MessageDataReadAck& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageDataReadAck& default_instance();

  void Swap(MessageDataReadAck* other);

  // implements Message ----------------------------------------------

  MessageDataReadAck* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageDataReadAck& from);
  void MergeFrom(const MessageDataReadAck& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required uint32 session_id = 2;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 2;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);

  // required uint32 msg_id = 3;
  inline bool has_msg_id() const;
  inline void clear_msg_id();
  static const int kMsgIdFieldNumber = 3;
  inline ::google::protobuf::uint32 msg_id() const;
  inline void set_msg_id(::google::protobuf::uint32 value);

  // required .Im.Base.SessionType session_type = 4;
  inline bool has_session_type() const;
  inline void clear_session_type();
  static const int kSessionTypeFieldNumber = 4;
  inline ::Im::Base::SessionType session_type() const;
  inline void set_session_type(::Im::Base::SessionType value);

  // @@protoc_insertion_point(class_scope:Im.Message.MessageDataReadAck)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_session_id();
  inline void clear_has_session_id();
  inline void set_has_msg_id();
  inline void clear_has_msg_id();
  inline void set_has_session_type();
  inline void clear_has_session_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 msg_id_;
  int session_type_;
  friend void  protobuf_AddDesc_Im_2eMessage_2eproto();
  friend void protobuf_AssignDesc_Im_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_Im_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static MessageDataReadAck* default_instance_;
};
// -------------------------------------------------------------------

class MessageDataReadNotify : public ::google::protobuf::Message {
 public:
  MessageDataReadNotify();
  virtual ~MessageDataReadNotify();

  MessageDataReadNotify(const MessageDataReadNotify& from);

  inline MessageDataReadNotify& operator=(const MessageDataReadNotify& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const MessageDataReadNotify& default_instance();

  void Swap(MessageDataReadNotify* other);

  // implements Message ----------------------------------------------

  MessageDataReadNotify* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const MessageDataReadNotify& from);
  void MergeFrom(const MessageDataReadNotify& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required uint32 session_id = 2;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 2;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);

  // required uint32 msg_id = 3;
  inline bool has_msg_id() const;
  inline void clear_msg_id();
  static const int kMsgIdFieldNumber = 3;
  inline ::google::protobuf::uint32 msg_id() const;
  inline void set_msg_id(::google::protobuf::uint32 value);

  // required .Im.Base.SessionType session_type = 4;
  inline bool has_session_type() const;
  inline void clear_session_type();
  static const int kSessionTypeFieldNumber = 4;
  inline ::Im::Base::SessionType session_type() const;
  inline void set_session_type(::Im::Base::SessionType value);

  // @@protoc_insertion_point(class_scope:Im.Message.MessageDataReadNotify)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_session_id();
  inline void clear_has_session_id();
  inline void set_has_msg_id();
  inline void clear_has_msg_id();
  inline void set_has_session_type();
  inline void clear_has_session_type();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 msg_id_;
  int session_type_;
  friend void  protobuf_AddDesc_Im_2eMessage_2eproto();
  friend void protobuf_AssignDesc_Im_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_Im_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static MessageDataReadNotify* default_instance_;
};
// -------------------------------------------------------------------

class ClientTimeRequest : public ::google::protobuf::Message {
 public:
  ClientTimeRequest();
  virtual ~ClientTimeRequest();

  ClientTimeRequest(const ClientTimeRequest& from);

  inline ClientTimeRequest& operator=(const ClientTimeRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientTimeRequest& default_instance();

  void Swap(ClientTimeRequest* other);

  // implements Message ----------------------------------------------

  ClientTimeRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientTimeRequest& from);
  void MergeFrom(const ClientTimeRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // @@protoc_insertion_point(class_scope:Im.Message.ClientTimeRequest)
 private:

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  friend void  protobuf_AddDesc_Im_2eMessage_2eproto();
  friend void protobuf_AssignDesc_Im_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_Im_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static ClientTimeRequest* default_instance_;
};
// -------------------------------------------------------------------

class ClientTimeResponse : public ::google::protobuf::Message {
 public:
  ClientTimeResponse();
  virtual ~ClientTimeResponse();

  ClientTimeResponse(const ClientTimeResponse& from);

  inline ClientTimeResponse& operator=(const ClientTimeResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const ClientTimeResponse& default_instance();

  void Swap(ClientTimeResponse* other);

  // implements Message ----------------------------------------------

  ClientTimeResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const ClientTimeResponse& from);
  void MergeFrom(const ClientTimeResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 server_time = 1;
  inline bool has_server_time() const;
  inline void clear_server_time();
  static const int kServerTimeFieldNumber = 1;
  inline ::google::protobuf::uint32 server_time() const;
  inline void set_server_time(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:Im.Message.ClientTimeResponse)
 private:
  inline void set_has_server_time();
  inline void clear_has_server_time();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 server_time_;
  friend void  protobuf_AddDesc_Im_2eMessage_2eproto();
  friend void protobuf_AssignDesc_Im_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_Im_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static ClientTimeResponse* default_instance_;
};
// -------------------------------------------------------------------

class UnreadMsgCntRequest : public ::google::protobuf::Message {
 public:
  UnreadMsgCntRequest();
  virtual ~UnreadMsgCntRequest();

  UnreadMsgCntRequest(const UnreadMsgCntRequest& from);

  inline UnreadMsgCntRequest& operator=(const UnreadMsgCntRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnreadMsgCntRequest& default_instance();

  void Swap(UnreadMsgCntRequest* other);

  // implements Message ----------------------------------------------

  UnreadMsgCntRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnreadMsgCntRequest& from);
  void MergeFrom(const UnreadMsgCntRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // optional bytes attach_data = 2;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 2;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:Im.Message.UnreadMsgCntRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::std::string* attach_data_;
  ::google::protobuf::uint32 user_id_;
  friend void  protobuf_AddDesc_Im_2eMessage_2eproto();
  friend void protobuf_AssignDesc_Im_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_Im_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static UnreadMsgCntRequest* default_instance_;
};
// -------------------------------------------------------------------

class UnreadMsgCntResponse : public ::google::protobuf::Message {
 public:
  UnreadMsgCntResponse();
  virtual ~UnreadMsgCntResponse();

  UnreadMsgCntResponse(const UnreadMsgCntResponse& from);

  inline UnreadMsgCntResponse& operator=(const UnreadMsgCntResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const UnreadMsgCntResponse& default_instance();

  void Swap(UnreadMsgCntResponse* other);

  // implements Message ----------------------------------------------

  UnreadMsgCntResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const UnreadMsgCntResponse& from);
  void MergeFrom(const UnreadMsgCntResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required uint32 total_count = 2;
  inline bool has_total_count() const;
  inline void clear_total_count();
  static const int kTotalCountFieldNumber = 2;
  inline ::google::protobuf::uint32 total_count() const;
  inline void set_total_count(::google::protobuf::uint32 value);

  // repeated .Im.Base.UnreadInfo unread_info_list = 3;
  inline int unread_info_list_size() const;
  inline void clear_unread_info_list();
  static const int kUnreadInfoListFieldNumber = 3;
  inline const ::Im::Base::UnreadInfo& unread_info_list(int index) const;
  inline ::Im::Base::UnreadInfo* mutable_unread_info_list(int index);
  inline ::Im::Base::UnreadInfo* add_unread_info_list();
  inline const ::google::protobuf::RepeatedPtrField< ::Im::Base::UnreadInfo >&
      unread_info_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::Im::Base::UnreadInfo >*
      mutable_unread_info_list();

  // optional bytes attach_data = 4;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 4;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:Im.Message.UnreadMsgCntResponse)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_total_count();
  inline void clear_has_total_count();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 user_id_;
  ::google::protobuf::uint32 total_count_;
  ::google::protobuf::RepeatedPtrField< ::Im::Base::UnreadInfo > unread_info_list_;
  ::std::string* attach_data_;
  friend void  protobuf_AddDesc_Im_2eMessage_2eproto();
  friend void protobuf_AssignDesc_Im_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_Im_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static UnreadMsgCntResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetMsgListRequest : public ::google::protobuf::Message {
 public:
  GetMsgListRequest();
  virtual ~GetMsgListRequest();

  GetMsgListRequest(const GetMsgListRequest& from);

  inline GetMsgListRequest& operator=(const GetMsgListRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetMsgListRequest& default_instance();

  void Swap(GetMsgListRequest* other);

  // implements Message ----------------------------------------------

  GetMsgListRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetMsgListRequest& from);
  void MergeFrom(const GetMsgListRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required .Im.Base.SessionType session_type = 2;
  inline bool has_session_type() const;
  inline void clear_session_type();
  static const int kSessionTypeFieldNumber = 2;
  inline ::Im::Base::SessionType session_type() const;
  inline void set_session_type(::Im::Base::SessionType value);

  // required uint32 session_id = 3;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 3;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);

  // required uint32 msg_id_begin = 4;
  inline bool has_msg_id_begin() const;
  inline void clear_msg_id_begin();
  static const int kMsgIdBeginFieldNumber = 4;
  inline ::google::protobuf::uint32 msg_id_begin() const;
  inline void set_msg_id_begin(::google::protobuf::uint32 value);

  // required uint32 msg_count = 5;
  inline bool has_msg_count() const;
  inline void clear_msg_count();
  static const int kMsgCountFieldNumber = 5;
  inline ::google::protobuf::uint32 msg_count() const;
  inline void set_msg_count(::google::protobuf::uint32 value);

  // optional bytes attach_data = 6;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 6;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:Im.Message.GetMsgListRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_session_type();
  inline void clear_has_session_type();
  inline void set_has_session_id();
  inline void clear_has_session_id();
  inline void set_has_msg_id_begin();
  inline void clear_has_msg_id_begin();
  inline void set_has_msg_count();
  inline void clear_has_msg_count();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 user_id_;
  int session_type_;
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 msg_id_begin_;
  ::std::string* attach_data_;
  ::google::protobuf::uint32 msg_count_;
  friend void  protobuf_AddDesc_Im_2eMessage_2eproto();
  friend void protobuf_AssignDesc_Im_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_Im_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static GetMsgListRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetMsgListResponse : public ::google::protobuf::Message {
 public:
  GetMsgListResponse();
  virtual ~GetMsgListResponse();

  GetMsgListResponse(const GetMsgListResponse& from);

  inline GetMsgListResponse& operator=(const GetMsgListResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetMsgListResponse& default_instance();

  void Swap(GetMsgListResponse* other);

  // implements Message ----------------------------------------------

  GetMsgListResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetMsgListResponse& from);
  void MergeFrom(const GetMsgListResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required .Im.Base.SessionType session_type = 2;
  inline bool has_session_type() const;
  inline void clear_session_type();
  static const int kSessionTypeFieldNumber = 2;
  inline ::Im::Base::SessionType session_type() const;
  inline void set_session_type(::Im::Base::SessionType value);

  // required uint32 session_id = 3;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 3;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);

  // required uint32 msg_id_begin = 4;
  inline bool has_msg_id_begin() const;
  inline void clear_msg_id_begin();
  static const int kMsgIdBeginFieldNumber = 4;
  inline ::google::protobuf::uint32 msg_id_begin() const;
  inline void set_msg_id_begin(::google::protobuf::uint32 value);

  // repeated .Im.Base.MsgInfo msg_info_list = 5;
  inline int msg_info_list_size() const;
  inline void clear_msg_info_list();
  static const int kMsgInfoListFieldNumber = 5;
  inline const ::Im::Base::MsgInfo& msg_info_list(int index) const;
  inline ::Im::Base::MsgInfo* mutable_msg_info_list(int index);
  inline ::Im::Base::MsgInfo* add_msg_info_list();
  inline const ::google::protobuf::RepeatedPtrField< ::Im::Base::MsgInfo >&
      msg_info_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::Im::Base::MsgInfo >*
      mutable_msg_info_list();

  // optional bytes attach_data = 6;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 6;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:Im.Message.GetMsgListResponse)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_session_type();
  inline void clear_has_session_type();
  inline void set_has_session_id();
  inline void clear_has_session_id();
  inline void set_has_msg_id_begin();
  inline void clear_has_msg_id_begin();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 user_id_;
  int session_type_;
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 msg_id_begin_;
  ::google::protobuf::RepeatedPtrField< ::Im::Base::MsgInfo > msg_info_list_;
  ::std::string* attach_data_;
  friend void  protobuf_AddDesc_Im_2eMessage_2eproto();
  friend void protobuf_AssignDesc_Im_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_Im_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static GetMsgListResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetLatestMsgIdResquest : public ::google::protobuf::Message {
 public:
  GetLatestMsgIdResquest();
  virtual ~GetLatestMsgIdResquest();

  GetLatestMsgIdResquest(const GetLatestMsgIdResquest& from);

  inline GetLatestMsgIdResquest& operator=(const GetLatestMsgIdResquest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetLatestMsgIdResquest& default_instance();

  void Swap(GetLatestMsgIdResquest* other);

  // implements Message ----------------------------------------------

  GetLatestMsgIdResquest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetLatestMsgIdResquest& from);
  void MergeFrom(const GetLatestMsgIdResquest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required .Im.Base.SessionType session_type = 2;
  inline bool has_session_type() const;
  inline void clear_session_type();
  static const int kSessionTypeFieldNumber = 2;
  inline ::Im::Base::SessionType session_type() const;
  inline void set_session_type(::Im::Base::SessionType value);

  // required uint32 session_id = 3;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 3;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);

  // repeated uint32 msg_id_list = 4;
  inline int msg_id_list_size() const;
  inline void clear_msg_id_list();
  static const int kMsgIdListFieldNumber = 4;
  inline ::google::protobuf::uint32 msg_id_list(int index) const;
  inline void set_msg_id_list(int index, ::google::protobuf::uint32 value);
  inline void add_msg_id_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      msg_id_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_msg_id_list();

  // optional bytes attach_data = 5;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 5;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:Im.Message.GetLatestMsgIdResquest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_session_type();
  inline void clear_has_session_type();
  inline void set_has_session_id();
  inline void clear_has_session_id();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 user_id_;
  int session_type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > msg_id_list_;
  ::std::string* attach_data_;
  ::google::protobuf::uint32 session_id_;
  friend void  protobuf_AddDesc_Im_2eMessage_2eproto();
  friend void protobuf_AssignDesc_Im_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_Im_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static GetLatestMsgIdResquest* default_instance_;
};
// -------------------------------------------------------------------

class GetLatestMsgIdResponse : public ::google::protobuf::Message {
 public:
  GetLatestMsgIdResponse();
  virtual ~GetLatestMsgIdResponse();

  GetLatestMsgIdResponse(const GetLatestMsgIdResponse& from);

  inline GetLatestMsgIdResponse& operator=(const GetLatestMsgIdResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetLatestMsgIdResponse& default_instance();

  void Swap(GetLatestMsgIdResponse* other);

  // implements Message ----------------------------------------------

  GetLatestMsgIdResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetLatestMsgIdResponse& from);
  void MergeFrom(const GetLatestMsgIdResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required .Im.Base.SessionType session_type = 2;
  inline bool has_session_type() const;
  inline void clear_session_type();
  static const int kSessionTypeFieldNumber = 2;
  inline ::Im::Base::SessionType session_type() const;
  inline void set_session_type(::Im::Base::SessionType value);

  // required uint32 session_id = 3;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 3;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);

  // required uint32 latest_msg_id = 4;
  inline bool has_latest_msg_id() const;
  inline void clear_latest_msg_id();
  static const int kLatestMsgIdFieldNumber = 4;
  inline ::google::protobuf::uint32 latest_msg_id() const;
  inline void set_latest_msg_id(::google::protobuf::uint32 value);

  // optional bytes attach_data = 5;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 5;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:Im.Message.GetLatestMsgIdResponse)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_session_type();
  inline void clear_has_session_type();
  inline void set_has_session_id();
  inline void clear_has_session_id();
  inline void set_has_latest_msg_id();
  inline void clear_has_latest_msg_id();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 user_id_;
  int session_type_;
  ::google::protobuf::uint32 session_id_;
  ::google::protobuf::uint32 latest_msg_id_;
  ::std::string* attach_data_;
  friend void  protobuf_AddDesc_Im_2eMessage_2eproto();
  friend void protobuf_AssignDesc_Im_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_Im_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static GetLatestMsgIdResponse* default_instance_;
};
// -------------------------------------------------------------------

class GetMsgByIdRequest : public ::google::protobuf::Message {
 public:
  GetMsgByIdRequest();
  virtual ~GetMsgByIdRequest();

  GetMsgByIdRequest(const GetMsgByIdRequest& from);

  inline GetMsgByIdRequest& operator=(const GetMsgByIdRequest& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetMsgByIdRequest& default_instance();

  void Swap(GetMsgByIdRequest* other);

  // implements Message ----------------------------------------------

  GetMsgByIdRequest* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetMsgByIdRequest& from);
  void MergeFrom(const GetMsgByIdRequest& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required .Im.Base.SessionType session_type = 2;
  inline bool has_session_type() const;
  inline void clear_session_type();
  static const int kSessionTypeFieldNumber = 2;
  inline ::Im::Base::SessionType session_type() const;
  inline void set_session_type(::Im::Base::SessionType value);

  // required uint32 session_id = 3;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 3;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);

  // repeated uint32 msg_id_list = 4;
  inline int msg_id_list_size() const;
  inline void clear_msg_id_list();
  static const int kMsgIdListFieldNumber = 4;
  inline ::google::protobuf::uint32 msg_id_list(int index) const;
  inline void set_msg_id_list(int index, ::google::protobuf::uint32 value);
  inline void add_msg_id_list(::google::protobuf::uint32 value);
  inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
      msg_id_list() const;
  inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
      mutable_msg_id_list();

  // optional bytes attach_data = 5;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 5;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:Im.Message.GetMsgByIdRequest)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_session_type();
  inline void clear_has_session_type();
  inline void set_has_session_id();
  inline void clear_has_session_id();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 user_id_;
  int session_type_;
  ::google::protobuf::RepeatedField< ::google::protobuf::uint32 > msg_id_list_;
  ::std::string* attach_data_;
  ::google::protobuf::uint32 session_id_;
  friend void  protobuf_AddDesc_Im_2eMessage_2eproto();
  friend void protobuf_AssignDesc_Im_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_Im_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static GetMsgByIdRequest* default_instance_;
};
// -------------------------------------------------------------------

class GetMsgByIdResponse : public ::google::protobuf::Message {
 public:
  GetMsgByIdResponse();
  virtual ~GetMsgByIdResponse();

  GetMsgByIdResponse(const GetMsgByIdResponse& from);

  inline GetMsgByIdResponse& operator=(const GetMsgByIdResponse& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const GetMsgByIdResponse& default_instance();

  void Swap(GetMsgByIdResponse* other);

  // implements Message ----------------------------------------------

  GetMsgByIdResponse* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const GetMsgByIdResponse& from);
  void MergeFrom(const GetMsgByIdResponse& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required uint32 user_id = 1;
  inline bool has_user_id() const;
  inline void clear_user_id();
  static const int kUserIdFieldNumber = 1;
  inline ::google::protobuf::uint32 user_id() const;
  inline void set_user_id(::google::protobuf::uint32 value);

  // required .Im.Base.SessionType session_type = 2;
  inline bool has_session_type() const;
  inline void clear_session_type();
  static const int kSessionTypeFieldNumber = 2;
  inline ::Im::Base::SessionType session_type() const;
  inline void set_session_type(::Im::Base::SessionType value);

  // required uint32 session_id = 3;
  inline bool has_session_id() const;
  inline void clear_session_id();
  static const int kSessionIdFieldNumber = 3;
  inline ::google::protobuf::uint32 session_id() const;
  inline void set_session_id(::google::protobuf::uint32 value);

  // repeated .Im.Base.MsgInfo msg_info_list = 4;
  inline int msg_info_list_size() const;
  inline void clear_msg_info_list();
  static const int kMsgInfoListFieldNumber = 4;
  inline const ::Im::Base::MsgInfo& msg_info_list(int index) const;
  inline ::Im::Base::MsgInfo* mutable_msg_info_list(int index);
  inline ::Im::Base::MsgInfo* add_msg_info_list();
  inline const ::google::protobuf::RepeatedPtrField< ::Im::Base::MsgInfo >&
      msg_info_list() const;
  inline ::google::protobuf::RepeatedPtrField< ::Im::Base::MsgInfo >*
      mutable_msg_info_list();

  // optional bytes attach_data = 5;
  inline bool has_attach_data() const;
  inline void clear_attach_data();
  static const int kAttachDataFieldNumber = 5;
  inline const ::std::string& attach_data() const;
  inline void set_attach_data(const ::std::string& value);
  inline void set_attach_data(const char* value);
  inline void set_attach_data(const void* value, size_t size);
  inline ::std::string* mutable_attach_data();
  inline ::std::string* release_attach_data();
  inline void set_allocated_attach_data(::std::string* attach_data);

  // @@protoc_insertion_point(class_scope:Im.Message.GetMsgByIdResponse)
 private:
  inline void set_has_user_id();
  inline void clear_has_user_id();
  inline void set_has_session_type();
  inline void clear_has_session_type();
  inline void set_has_session_id();
  inline void clear_has_session_id();
  inline void set_has_attach_data();
  inline void clear_has_attach_data();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::uint32 user_id_;
  int session_type_;
  ::google::protobuf::RepeatedPtrField< ::Im::Base::MsgInfo > msg_info_list_;
  ::std::string* attach_data_;
  ::google::protobuf::uint32 session_id_;
  friend void  protobuf_AddDesc_Im_2eMessage_2eproto();
  friend void protobuf_AssignDesc_Im_2eMessage_2eproto();
  friend void protobuf_ShutdownFile_Im_2eMessage_2eproto();

  void InitAsDefaultInstance();
  static GetMsgByIdResponse* default_instance_;
};
// ===================================================================


// ===================================================================

// MessageData

// required uint32 msg_id = 1;
inline bool MessageData::has_msg_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessageData::set_has_msg_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessageData::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessageData::clear_msg_id() {
  msg_id_ = 0u;
  clear_has_msg_id();
}
inline ::google::protobuf::uint32 MessageData::msg_id() const {
  // @@protoc_insertion_point(field_get:Im.Message.MessageData.msg_id)
  return msg_id_;
}
inline void MessageData::set_msg_id(::google::protobuf::uint32 value) {
  set_has_msg_id();
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.MessageData.msg_id)
}

// required uint32 from_user_id = 2;
inline bool MessageData::has_from_user_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MessageData::set_has_from_user_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MessageData::clear_has_from_user_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MessageData::clear_from_user_id() {
  from_user_id_ = 0u;
  clear_has_from_user_id();
}
inline ::google::protobuf::uint32 MessageData::from_user_id() const {
  // @@protoc_insertion_point(field_get:Im.Message.MessageData.from_user_id)
  return from_user_id_;
}
inline void MessageData::set_from_user_id(::google::protobuf::uint32 value) {
  set_has_from_user_id();
  from_user_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.MessageData.from_user_id)
}

// required uint32 to_session_id = 3;
inline bool MessageData::has_to_session_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MessageData::set_has_to_session_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MessageData::clear_has_to_session_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MessageData::clear_to_session_id() {
  to_session_id_ = 0u;
  clear_has_to_session_id();
}
inline ::google::protobuf::uint32 MessageData::to_session_id() const {
  // @@protoc_insertion_point(field_get:Im.Message.MessageData.to_session_id)
  return to_session_id_;
}
inline void MessageData::set_to_session_id(::google::protobuf::uint32 value) {
  set_has_to_session_id();
  to_session_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.MessageData.to_session_id)
}

// required uint32 create_time = 4;
inline bool MessageData::has_create_time() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MessageData::set_has_create_time() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MessageData::clear_has_create_time() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MessageData::clear_create_time() {
  create_time_ = 0u;
  clear_has_create_time();
}
inline ::google::protobuf::uint32 MessageData::create_time() const {
  // @@protoc_insertion_point(field_get:Im.Message.MessageData.create_time)
  return create_time_;
}
inline void MessageData::set_create_time(::google::protobuf::uint32 value) {
  set_has_create_time();
  create_time_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.MessageData.create_time)
}

// required .Im.Base.MsgType msg_type = 5;
inline bool MessageData::has_msg_type() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void MessageData::set_has_msg_type() {
  _has_bits_[0] |= 0x00000010u;
}
inline void MessageData::clear_has_msg_type() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void MessageData::clear_msg_type() {
  msg_type_ = 1;
  clear_has_msg_type();
}
inline ::Im::Base::MsgType MessageData::msg_type() const {
  // @@protoc_insertion_point(field_get:Im.Message.MessageData.msg_type)
  return static_cast< ::Im::Base::MsgType >(msg_type_);
}
inline void MessageData::set_msg_type(::Im::Base::MsgType value) {
  assert(::Im::Base::MsgType_IsValid(value));
  set_has_msg_type();
  msg_type_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.MessageData.msg_type)
}

// required bytes msg_data = 6;
inline bool MessageData::has_msg_data() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void MessageData::set_has_msg_data() {
  _has_bits_[0] |= 0x00000020u;
}
inline void MessageData::clear_has_msg_data() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void MessageData::clear_msg_data() {
  if (msg_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_data_->clear();
  }
  clear_has_msg_data();
}
inline const ::std::string& MessageData::msg_data() const {
  // @@protoc_insertion_point(field_get:Im.Message.MessageData.msg_data)
  return *msg_data_;
}
inline void MessageData::set_msg_data(const ::std::string& value) {
  set_has_msg_data();
  if (msg_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_data_ = new ::std::string;
  }
  msg_data_->assign(value);
  // @@protoc_insertion_point(field_set:Im.Message.MessageData.msg_data)
}
inline void MessageData::set_msg_data(const char* value) {
  set_has_msg_data();
  if (msg_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_data_ = new ::std::string;
  }
  msg_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Im.Message.MessageData.msg_data)
}
inline void MessageData::set_msg_data(const void* value, size_t size) {
  set_has_msg_data();
  if (msg_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_data_ = new ::std::string;
  }
  msg_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Im.Message.MessageData.msg_data)
}
inline ::std::string* MessageData::mutable_msg_data() {
  set_has_msg_data();
  if (msg_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    msg_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Im.Message.MessageData.msg_data)
  return msg_data_;
}
inline ::std::string* MessageData::release_msg_data() {
  clear_has_msg_data();
  if (msg_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = msg_data_;
    msg_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MessageData::set_allocated_msg_data(::std::string* msg_data) {
  if (msg_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete msg_data_;
  }
  if (msg_data) {
    set_has_msg_data();
    msg_data_ = msg_data;
  } else {
    clear_has_msg_data();
    msg_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Im.Message.MessageData.msg_data)
}

// optional bytes attach_data = 7;
inline bool MessageData::has_attach_data() const {
  return (_has_bits_[0] & 0x00000040u) != 0;
}
inline void MessageData::set_has_attach_data() {
  _has_bits_[0] |= 0x00000040u;
}
inline void MessageData::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000040u;
}
inline void MessageData::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& MessageData::attach_data() const {
  // @@protoc_insertion_point(field_get:Im.Message.MessageData.attach_data)
  return *attach_data_;
}
inline void MessageData::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:Im.Message.MessageData.attach_data)
}
inline void MessageData::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Im.Message.MessageData.attach_data)
}
inline void MessageData::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Im.Message.MessageData.attach_data)
}
inline ::std::string* MessageData::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Im.Message.MessageData.attach_data)
  return attach_data_;
}
inline ::std::string* MessageData::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void MessageData::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Im.Message.MessageData.attach_data)
}

// -------------------------------------------------------------------

// MessageDataAck

// required uint32 user_id = 1;
inline bool MessageDataAck::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessageDataAck::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessageDataAck::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessageDataAck::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 MessageDataAck::user_id() const {
  // @@protoc_insertion_point(field_get:Im.Message.MessageDataAck.user_id)
  return user_id_;
}
inline void MessageDataAck::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.MessageDataAck.user_id)
}

// required uint32 session_id = 2;
inline bool MessageDataAck::has_session_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MessageDataAck::set_has_session_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MessageDataAck::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MessageDataAck::clear_session_id() {
  session_id_ = 0u;
  clear_has_session_id();
}
inline ::google::protobuf::uint32 MessageDataAck::session_id() const {
  // @@protoc_insertion_point(field_get:Im.Message.MessageDataAck.session_id)
  return session_id_;
}
inline void MessageDataAck::set_session_id(::google::protobuf::uint32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.MessageDataAck.session_id)
}

// required uint32 msg_id = 3;
inline bool MessageDataAck::has_msg_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MessageDataAck::set_has_msg_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MessageDataAck::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MessageDataAck::clear_msg_id() {
  msg_id_ = 0u;
  clear_has_msg_id();
}
inline ::google::protobuf::uint32 MessageDataAck::msg_id() const {
  // @@protoc_insertion_point(field_get:Im.Message.MessageDataAck.msg_id)
  return msg_id_;
}
inline void MessageDataAck::set_msg_id(::google::protobuf::uint32 value) {
  set_has_msg_id();
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.MessageDataAck.msg_id)
}

// required .Im.Base.SessionType session_type = 4;
inline bool MessageDataAck::has_session_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MessageDataAck::set_has_session_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MessageDataAck::clear_has_session_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MessageDataAck::clear_session_type() {
  session_type_ = 1;
  clear_has_session_type();
}
inline ::Im::Base::SessionType MessageDataAck::session_type() const {
  // @@protoc_insertion_point(field_get:Im.Message.MessageDataAck.session_type)
  return static_cast< ::Im::Base::SessionType >(session_type_);
}
inline void MessageDataAck::set_session_type(::Im::Base::SessionType value) {
  assert(::Im::Base::SessionType_IsValid(value));
  set_has_session_type();
  session_type_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.MessageDataAck.session_type)
}

// -------------------------------------------------------------------

// MessageDataReadAck

// required uint32 user_id = 1;
inline bool MessageDataReadAck::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessageDataReadAck::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessageDataReadAck::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessageDataReadAck::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 MessageDataReadAck::user_id() const {
  // @@protoc_insertion_point(field_get:Im.Message.MessageDataReadAck.user_id)
  return user_id_;
}
inline void MessageDataReadAck::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.MessageDataReadAck.user_id)
}

// required uint32 session_id = 2;
inline bool MessageDataReadAck::has_session_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MessageDataReadAck::set_has_session_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MessageDataReadAck::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MessageDataReadAck::clear_session_id() {
  session_id_ = 0u;
  clear_has_session_id();
}
inline ::google::protobuf::uint32 MessageDataReadAck::session_id() const {
  // @@protoc_insertion_point(field_get:Im.Message.MessageDataReadAck.session_id)
  return session_id_;
}
inline void MessageDataReadAck::set_session_id(::google::protobuf::uint32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.MessageDataReadAck.session_id)
}

// required uint32 msg_id = 3;
inline bool MessageDataReadAck::has_msg_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MessageDataReadAck::set_has_msg_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MessageDataReadAck::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MessageDataReadAck::clear_msg_id() {
  msg_id_ = 0u;
  clear_has_msg_id();
}
inline ::google::protobuf::uint32 MessageDataReadAck::msg_id() const {
  // @@protoc_insertion_point(field_get:Im.Message.MessageDataReadAck.msg_id)
  return msg_id_;
}
inline void MessageDataReadAck::set_msg_id(::google::protobuf::uint32 value) {
  set_has_msg_id();
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.MessageDataReadAck.msg_id)
}

// required .Im.Base.SessionType session_type = 4;
inline bool MessageDataReadAck::has_session_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MessageDataReadAck::set_has_session_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MessageDataReadAck::clear_has_session_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MessageDataReadAck::clear_session_type() {
  session_type_ = 1;
  clear_has_session_type();
}
inline ::Im::Base::SessionType MessageDataReadAck::session_type() const {
  // @@protoc_insertion_point(field_get:Im.Message.MessageDataReadAck.session_type)
  return static_cast< ::Im::Base::SessionType >(session_type_);
}
inline void MessageDataReadAck::set_session_type(::Im::Base::SessionType value) {
  assert(::Im::Base::SessionType_IsValid(value));
  set_has_session_type();
  session_type_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.MessageDataReadAck.session_type)
}

// -------------------------------------------------------------------

// MessageDataReadNotify

// required uint32 user_id = 1;
inline bool MessageDataReadNotify::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void MessageDataReadNotify::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void MessageDataReadNotify::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void MessageDataReadNotify::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 MessageDataReadNotify::user_id() const {
  // @@protoc_insertion_point(field_get:Im.Message.MessageDataReadNotify.user_id)
  return user_id_;
}
inline void MessageDataReadNotify::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.MessageDataReadNotify.user_id)
}

// required uint32 session_id = 2;
inline bool MessageDataReadNotify::has_session_id() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void MessageDataReadNotify::set_has_session_id() {
  _has_bits_[0] |= 0x00000002u;
}
inline void MessageDataReadNotify::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void MessageDataReadNotify::clear_session_id() {
  session_id_ = 0u;
  clear_has_session_id();
}
inline ::google::protobuf::uint32 MessageDataReadNotify::session_id() const {
  // @@protoc_insertion_point(field_get:Im.Message.MessageDataReadNotify.session_id)
  return session_id_;
}
inline void MessageDataReadNotify::set_session_id(::google::protobuf::uint32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.MessageDataReadNotify.session_id)
}

// required uint32 msg_id = 3;
inline bool MessageDataReadNotify::has_msg_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void MessageDataReadNotify::set_has_msg_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void MessageDataReadNotify::clear_has_msg_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void MessageDataReadNotify::clear_msg_id() {
  msg_id_ = 0u;
  clear_has_msg_id();
}
inline ::google::protobuf::uint32 MessageDataReadNotify::msg_id() const {
  // @@protoc_insertion_point(field_get:Im.Message.MessageDataReadNotify.msg_id)
  return msg_id_;
}
inline void MessageDataReadNotify::set_msg_id(::google::protobuf::uint32 value) {
  set_has_msg_id();
  msg_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.MessageDataReadNotify.msg_id)
}

// required .Im.Base.SessionType session_type = 4;
inline bool MessageDataReadNotify::has_session_type() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void MessageDataReadNotify::set_has_session_type() {
  _has_bits_[0] |= 0x00000008u;
}
inline void MessageDataReadNotify::clear_has_session_type() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void MessageDataReadNotify::clear_session_type() {
  session_type_ = 1;
  clear_has_session_type();
}
inline ::Im::Base::SessionType MessageDataReadNotify::session_type() const {
  // @@protoc_insertion_point(field_get:Im.Message.MessageDataReadNotify.session_type)
  return static_cast< ::Im::Base::SessionType >(session_type_);
}
inline void MessageDataReadNotify::set_session_type(::Im::Base::SessionType value) {
  assert(::Im::Base::SessionType_IsValid(value));
  set_has_session_type();
  session_type_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.MessageDataReadNotify.session_type)
}

// -------------------------------------------------------------------

// ClientTimeRequest

// -------------------------------------------------------------------

// ClientTimeResponse

// required uint32 server_time = 1;
inline bool ClientTimeResponse::has_server_time() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void ClientTimeResponse::set_has_server_time() {
  _has_bits_[0] |= 0x00000001u;
}
inline void ClientTimeResponse::clear_has_server_time() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void ClientTimeResponse::clear_server_time() {
  server_time_ = 0u;
  clear_has_server_time();
}
inline ::google::protobuf::uint32 ClientTimeResponse::server_time() const {
  // @@protoc_insertion_point(field_get:Im.Message.ClientTimeResponse.server_time)
  return server_time_;
}
inline void ClientTimeResponse::set_server_time(::google::protobuf::uint32 value) {
  set_has_server_time();
  server_time_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.ClientTimeResponse.server_time)
}

// -------------------------------------------------------------------

// UnreadMsgCntRequest

// required uint32 user_id = 1;
inline bool UnreadMsgCntRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnreadMsgCntRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnreadMsgCntRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnreadMsgCntRequest::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 UnreadMsgCntRequest::user_id() const {
  // @@protoc_insertion_point(field_get:Im.Message.UnreadMsgCntRequest.user_id)
  return user_id_;
}
inline void UnreadMsgCntRequest::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.UnreadMsgCntRequest.user_id)
}

// optional bytes attach_data = 2;
inline bool UnreadMsgCntRequest::has_attach_data() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnreadMsgCntRequest::set_has_attach_data() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnreadMsgCntRequest::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnreadMsgCntRequest::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& UnreadMsgCntRequest::attach_data() const {
  // @@protoc_insertion_point(field_get:Im.Message.UnreadMsgCntRequest.attach_data)
  return *attach_data_;
}
inline void UnreadMsgCntRequest::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:Im.Message.UnreadMsgCntRequest.attach_data)
}
inline void UnreadMsgCntRequest::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Im.Message.UnreadMsgCntRequest.attach_data)
}
inline void UnreadMsgCntRequest::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Im.Message.UnreadMsgCntRequest.attach_data)
}
inline ::std::string* UnreadMsgCntRequest::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Im.Message.UnreadMsgCntRequest.attach_data)
  return attach_data_;
}
inline ::std::string* UnreadMsgCntRequest::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UnreadMsgCntRequest::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Im.Message.UnreadMsgCntRequest.attach_data)
}

// -------------------------------------------------------------------

// UnreadMsgCntResponse

// required uint32 user_id = 1;
inline bool UnreadMsgCntResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void UnreadMsgCntResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void UnreadMsgCntResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void UnreadMsgCntResponse::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 UnreadMsgCntResponse::user_id() const {
  // @@protoc_insertion_point(field_get:Im.Message.UnreadMsgCntResponse.user_id)
  return user_id_;
}
inline void UnreadMsgCntResponse::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.UnreadMsgCntResponse.user_id)
}

// required uint32 total_count = 2;
inline bool UnreadMsgCntResponse::has_total_count() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void UnreadMsgCntResponse::set_has_total_count() {
  _has_bits_[0] |= 0x00000002u;
}
inline void UnreadMsgCntResponse::clear_has_total_count() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void UnreadMsgCntResponse::clear_total_count() {
  total_count_ = 0u;
  clear_has_total_count();
}
inline ::google::protobuf::uint32 UnreadMsgCntResponse::total_count() const {
  // @@protoc_insertion_point(field_get:Im.Message.UnreadMsgCntResponse.total_count)
  return total_count_;
}
inline void UnreadMsgCntResponse::set_total_count(::google::protobuf::uint32 value) {
  set_has_total_count();
  total_count_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.UnreadMsgCntResponse.total_count)
}

// repeated .Im.Base.UnreadInfo unread_info_list = 3;
inline int UnreadMsgCntResponse::unread_info_list_size() const {
  return unread_info_list_.size();
}
inline void UnreadMsgCntResponse::clear_unread_info_list() {
  unread_info_list_.Clear();
}
inline const ::Im::Base::UnreadInfo& UnreadMsgCntResponse::unread_info_list(int index) const {
  // @@protoc_insertion_point(field_get:Im.Message.UnreadMsgCntResponse.unread_info_list)
  return unread_info_list_.Get(index);
}
inline ::Im::Base::UnreadInfo* UnreadMsgCntResponse::mutable_unread_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:Im.Message.UnreadMsgCntResponse.unread_info_list)
  return unread_info_list_.Mutable(index);
}
inline ::Im::Base::UnreadInfo* UnreadMsgCntResponse::add_unread_info_list() {
  // @@protoc_insertion_point(field_add:Im.Message.UnreadMsgCntResponse.unread_info_list)
  return unread_info_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Im::Base::UnreadInfo >&
UnreadMsgCntResponse::unread_info_list() const {
  // @@protoc_insertion_point(field_list:Im.Message.UnreadMsgCntResponse.unread_info_list)
  return unread_info_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::Im::Base::UnreadInfo >*
UnreadMsgCntResponse::mutable_unread_info_list() {
  // @@protoc_insertion_point(field_mutable_list:Im.Message.UnreadMsgCntResponse.unread_info_list)
  return &unread_info_list_;
}

// optional bytes attach_data = 4;
inline bool UnreadMsgCntResponse::has_attach_data() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void UnreadMsgCntResponse::set_has_attach_data() {
  _has_bits_[0] |= 0x00000008u;
}
inline void UnreadMsgCntResponse::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void UnreadMsgCntResponse::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& UnreadMsgCntResponse::attach_data() const {
  // @@protoc_insertion_point(field_get:Im.Message.UnreadMsgCntResponse.attach_data)
  return *attach_data_;
}
inline void UnreadMsgCntResponse::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:Im.Message.UnreadMsgCntResponse.attach_data)
}
inline void UnreadMsgCntResponse::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Im.Message.UnreadMsgCntResponse.attach_data)
}
inline void UnreadMsgCntResponse::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Im.Message.UnreadMsgCntResponse.attach_data)
}
inline ::std::string* UnreadMsgCntResponse::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Im.Message.UnreadMsgCntResponse.attach_data)
  return attach_data_;
}
inline ::std::string* UnreadMsgCntResponse::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void UnreadMsgCntResponse::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Im.Message.UnreadMsgCntResponse.attach_data)
}

// -------------------------------------------------------------------

// GetMsgListRequest

// required uint32 user_id = 1;
inline bool GetMsgListRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetMsgListRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetMsgListRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetMsgListRequest::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 GetMsgListRequest::user_id() const {
  // @@protoc_insertion_point(field_get:Im.Message.GetMsgListRequest.user_id)
  return user_id_;
}
inline void GetMsgListRequest::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.GetMsgListRequest.user_id)
}

// required .Im.Base.SessionType session_type = 2;
inline bool GetMsgListRequest::has_session_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetMsgListRequest::set_has_session_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetMsgListRequest::clear_has_session_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetMsgListRequest::clear_session_type() {
  session_type_ = 1;
  clear_has_session_type();
}
inline ::Im::Base::SessionType GetMsgListRequest::session_type() const {
  // @@protoc_insertion_point(field_get:Im.Message.GetMsgListRequest.session_type)
  return static_cast< ::Im::Base::SessionType >(session_type_);
}
inline void GetMsgListRequest::set_session_type(::Im::Base::SessionType value) {
  assert(::Im::Base::SessionType_IsValid(value));
  set_has_session_type();
  session_type_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.GetMsgListRequest.session_type)
}

// required uint32 session_id = 3;
inline bool GetMsgListRequest::has_session_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetMsgListRequest::set_has_session_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetMsgListRequest::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetMsgListRequest::clear_session_id() {
  session_id_ = 0u;
  clear_has_session_id();
}
inline ::google::protobuf::uint32 GetMsgListRequest::session_id() const {
  // @@protoc_insertion_point(field_get:Im.Message.GetMsgListRequest.session_id)
  return session_id_;
}
inline void GetMsgListRequest::set_session_id(::google::protobuf::uint32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.GetMsgListRequest.session_id)
}

// required uint32 msg_id_begin = 4;
inline bool GetMsgListRequest::has_msg_id_begin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetMsgListRequest::set_has_msg_id_begin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetMsgListRequest::clear_has_msg_id_begin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetMsgListRequest::clear_msg_id_begin() {
  msg_id_begin_ = 0u;
  clear_has_msg_id_begin();
}
inline ::google::protobuf::uint32 GetMsgListRequest::msg_id_begin() const {
  // @@protoc_insertion_point(field_get:Im.Message.GetMsgListRequest.msg_id_begin)
  return msg_id_begin_;
}
inline void GetMsgListRequest::set_msg_id_begin(::google::protobuf::uint32 value) {
  set_has_msg_id_begin();
  msg_id_begin_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.GetMsgListRequest.msg_id_begin)
}

// required uint32 msg_count = 5;
inline bool GetMsgListRequest::has_msg_count() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetMsgListRequest::set_has_msg_count() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetMsgListRequest::clear_has_msg_count() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetMsgListRequest::clear_msg_count() {
  msg_count_ = 0u;
  clear_has_msg_count();
}
inline ::google::protobuf::uint32 GetMsgListRequest::msg_count() const {
  // @@protoc_insertion_point(field_get:Im.Message.GetMsgListRequest.msg_count)
  return msg_count_;
}
inline void GetMsgListRequest::set_msg_count(::google::protobuf::uint32 value) {
  set_has_msg_count();
  msg_count_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.GetMsgListRequest.msg_count)
}

// optional bytes attach_data = 6;
inline bool GetMsgListRequest::has_attach_data() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetMsgListRequest::set_has_attach_data() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetMsgListRequest::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetMsgListRequest::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& GetMsgListRequest::attach_data() const {
  // @@protoc_insertion_point(field_get:Im.Message.GetMsgListRequest.attach_data)
  return *attach_data_;
}
inline void GetMsgListRequest::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:Im.Message.GetMsgListRequest.attach_data)
}
inline void GetMsgListRequest::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Im.Message.GetMsgListRequest.attach_data)
}
inline void GetMsgListRequest::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Im.Message.GetMsgListRequest.attach_data)
}
inline ::std::string* GetMsgListRequest::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Im.Message.GetMsgListRequest.attach_data)
  return attach_data_;
}
inline ::std::string* GetMsgListRequest::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetMsgListRequest::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Im.Message.GetMsgListRequest.attach_data)
}

// -------------------------------------------------------------------

// GetMsgListResponse

// required uint32 user_id = 1;
inline bool GetMsgListResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetMsgListResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetMsgListResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetMsgListResponse::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 GetMsgListResponse::user_id() const {
  // @@protoc_insertion_point(field_get:Im.Message.GetMsgListResponse.user_id)
  return user_id_;
}
inline void GetMsgListResponse::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.GetMsgListResponse.user_id)
}

// required .Im.Base.SessionType session_type = 2;
inline bool GetMsgListResponse::has_session_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetMsgListResponse::set_has_session_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetMsgListResponse::clear_has_session_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetMsgListResponse::clear_session_type() {
  session_type_ = 1;
  clear_has_session_type();
}
inline ::Im::Base::SessionType GetMsgListResponse::session_type() const {
  // @@protoc_insertion_point(field_get:Im.Message.GetMsgListResponse.session_type)
  return static_cast< ::Im::Base::SessionType >(session_type_);
}
inline void GetMsgListResponse::set_session_type(::Im::Base::SessionType value) {
  assert(::Im::Base::SessionType_IsValid(value));
  set_has_session_type();
  session_type_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.GetMsgListResponse.session_type)
}

// required uint32 session_id = 3;
inline bool GetMsgListResponse::has_session_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetMsgListResponse::set_has_session_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetMsgListResponse::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetMsgListResponse::clear_session_id() {
  session_id_ = 0u;
  clear_has_session_id();
}
inline ::google::protobuf::uint32 GetMsgListResponse::session_id() const {
  // @@protoc_insertion_point(field_get:Im.Message.GetMsgListResponse.session_id)
  return session_id_;
}
inline void GetMsgListResponse::set_session_id(::google::protobuf::uint32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.GetMsgListResponse.session_id)
}

// required uint32 msg_id_begin = 4;
inline bool GetMsgListResponse::has_msg_id_begin() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetMsgListResponse::set_has_msg_id_begin() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetMsgListResponse::clear_has_msg_id_begin() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetMsgListResponse::clear_msg_id_begin() {
  msg_id_begin_ = 0u;
  clear_has_msg_id_begin();
}
inline ::google::protobuf::uint32 GetMsgListResponse::msg_id_begin() const {
  // @@protoc_insertion_point(field_get:Im.Message.GetMsgListResponse.msg_id_begin)
  return msg_id_begin_;
}
inline void GetMsgListResponse::set_msg_id_begin(::google::protobuf::uint32 value) {
  set_has_msg_id_begin();
  msg_id_begin_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.GetMsgListResponse.msg_id_begin)
}

// repeated .Im.Base.MsgInfo msg_info_list = 5;
inline int GetMsgListResponse::msg_info_list_size() const {
  return msg_info_list_.size();
}
inline void GetMsgListResponse::clear_msg_info_list() {
  msg_info_list_.Clear();
}
inline const ::Im::Base::MsgInfo& GetMsgListResponse::msg_info_list(int index) const {
  // @@protoc_insertion_point(field_get:Im.Message.GetMsgListResponse.msg_info_list)
  return msg_info_list_.Get(index);
}
inline ::Im::Base::MsgInfo* GetMsgListResponse::mutable_msg_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:Im.Message.GetMsgListResponse.msg_info_list)
  return msg_info_list_.Mutable(index);
}
inline ::Im::Base::MsgInfo* GetMsgListResponse::add_msg_info_list() {
  // @@protoc_insertion_point(field_add:Im.Message.GetMsgListResponse.msg_info_list)
  return msg_info_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Im::Base::MsgInfo >&
GetMsgListResponse::msg_info_list() const {
  // @@protoc_insertion_point(field_list:Im.Message.GetMsgListResponse.msg_info_list)
  return msg_info_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::Im::Base::MsgInfo >*
GetMsgListResponse::mutable_msg_info_list() {
  // @@protoc_insertion_point(field_mutable_list:Im.Message.GetMsgListResponse.msg_info_list)
  return &msg_info_list_;
}

// optional bytes attach_data = 6;
inline bool GetMsgListResponse::has_attach_data() const {
  return (_has_bits_[0] & 0x00000020u) != 0;
}
inline void GetMsgListResponse::set_has_attach_data() {
  _has_bits_[0] |= 0x00000020u;
}
inline void GetMsgListResponse::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000020u;
}
inline void GetMsgListResponse::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& GetMsgListResponse::attach_data() const {
  // @@protoc_insertion_point(field_get:Im.Message.GetMsgListResponse.attach_data)
  return *attach_data_;
}
inline void GetMsgListResponse::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:Im.Message.GetMsgListResponse.attach_data)
}
inline void GetMsgListResponse::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Im.Message.GetMsgListResponse.attach_data)
}
inline void GetMsgListResponse::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Im.Message.GetMsgListResponse.attach_data)
}
inline ::std::string* GetMsgListResponse::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Im.Message.GetMsgListResponse.attach_data)
  return attach_data_;
}
inline ::std::string* GetMsgListResponse::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetMsgListResponse::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Im.Message.GetMsgListResponse.attach_data)
}

// -------------------------------------------------------------------

// GetLatestMsgIdResquest

// required uint32 user_id = 1;
inline bool GetLatestMsgIdResquest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetLatestMsgIdResquest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetLatestMsgIdResquest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetLatestMsgIdResquest::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 GetLatestMsgIdResquest::user_id() const {
  // @@protoc_insertion_point(field_get:Im.Message.GetLatestMsgIdResquest.user_id)
  return user_id_;
}
inline void GetLatestMsgIdResquest::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.GetLatestMsgIdResquest.user_id)
}

// required .Im.Base.SessionType session_type = 2;
inline bool GetLatestMsgIdResquest::has_session_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetLatestMsgIdResquest::set_has_session_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetLatestMsgIdResquest::clear_has_session_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetLatestMsgIdResquest::clear_session_type() {
  session_type_ = 1;
  clear_has_session_type();
}
inline ::Im::Base::SessionType GetLatestMsgIdResquest::session_type() const {
  // @@protoc_insertion_point(field_get:Im.Message.GetLatestMsgIdResquest.session_type)
  return static_cast< ::Im::Base::SessionType >(session_type_);
}
inline void GetLatestMsgIdResquest::set_session_type(::Im::Base::SessionType value) {
  assert(::Im::Base::SessionType_IsValid(value));
  set_has_session_type();
  session_type_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.GetLatestMsgIdResquest.session_type)
}

// required uint32 session_id = 3;
inline bool GetLatestMsgIdResquest::has_session_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetLatestMsgIdResquest::set_has_session_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetLatestMsgIdResquest::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetLatestMsgIdResquest::clear_session_id() {
  session_id_ = 0u;
  clear_has_session_id();
}
inline ::google::protobuf::uint32 GetLatestMsgIdResquest::session_id() const {
  // @@protoc_insertion_point(field_get:Im.Message.GetLatestMsgIdResquest.session_id)
  return session_id_;
}
inline void GetLatestMsgIdResquest::set_session_id(::google::protobuf::uint32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.GetLatestMsgIdResquest.session_id)
}

// repeated uint32 msg_id_list = 4;
inline int GetLatestMsgIdResquest::msg_id_list_size() const {
  return msg_id_list_.size();
}
inline void GetLatestMsgIdResquest::clear_msg_id_list() {
  msg_id_list_.Clear();
}
inline ::google::protobuf::uint32 GetLatestMsgIdResquest::msg_id_list(int index) const {
  // @@protoc_insertion_point(field_get:Im.Message.GetLatestMsgIdResquest.msg_id_list)
  return msg_id_list_.Get(index);
}
inline void GetLatestMsgIdResquest::set_msg_id_list(int index, ::google::protobuf::uint32 value) {
  msg_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:Im.Message.GetLatestMsgIdResquest.msg_id_list)
}
inline void GetLatestMsgIdResquest::add_msg_id_list(::google::protobuf::uint32 value) {
  msg_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:Im.Message.GetLatestMsgIdResquest.msg_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetLatestMsgIdResquest::msg_id_list() const {
  // @@protoc_insertion_point(field_list:Im.Message.GetLatestMsgIdResquest.msg_id_list)
  return msg_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetLatestMsgIdResquest::mutable_msg_id_list() {
  // @@protoc_insertion_point(field_mutable_list:Im.Message.GetLatestMsgIdResquest.msg_id_list)
  return &msg_id_list_;
}

// optional bytes attach_data = 5;
inline bool GetLatestMsgIdResquest::has_attach_data() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetLatestMsgIdResquest::set_has_attach_data() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetLatestMsgIdResquest::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetLatestMsgIdResquest::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& GetLatestMsgIdResquest::attach_data() const {
  // @@protoc_insertion_point(field_get:Im.Message.GetLatestMsgIdResquest.attach_data)
  return *attach_data_;
}
inline void GetLatestMsgIdResquest::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:Im.Message.GetLatestMsgIdResquest.attach_data)
}
inline void GetLatestMsgIdResquest::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Im.Message.GetLatestMsgIdResquest.attach_data)
}
inline void GetLatestMsgIdResquest::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Im.Message.GetLatestMsgIdResquest.attach_data)
}
inline ::std::string* GetLatestMsgIdResquest::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Im.Message.GetLatestMsgIdResquest.attach_data)
  return attach_data_;
}
inline ::std::string* GetLatestMsgIdResquest::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetLatestMsgIdResquest::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Im.Message.GetLatestMsgIdResquest.attach_data)
}

// -------------------------------------------------------------------

// GetLatestMsgIdResponse

// required uint32 user_id = 1;
inline bool GetLatestMsgIdResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetLatestMsgIdResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetLatestMsgIdResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetLatestMsgIdResponse::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 GetLatestMsgIdResponse::user_id() const {
  // @@protoc_insertion_point(field_get:Im.Message.GetLatestMsgIdResponse.user_id)
  return user_id_;
}
inline void GetLatestMsgIdResponse::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.GetLatestMsgIdResponse.user_id)
}

// required .Im.Base.SessionType session_type = 2;
inline bool GetLatestMsgIdResponse::has_session_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetLatestMsgIdResponse::set_has_session_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetLatestMsgIdResponse::clear_has_session_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetLatestMsgIdResponse::clear_session_type() {
  session_type_ = 1;
  clear_has_session_type();
}
inline ::Im::Base::SessionType GetLatestMsgIdResponse::session_type() const {
  // @@protoc_insertion_point(field_get:Im.Message.GetLatestMsgIdResponse.session_type)
  return static_cast< ::Im::Base::SessionType >(session_type_);
}
inline void GetLatestMsgIdResponse::set_session_type(::Im::Base::SessionType value) {
  assert(::Im::Base::SessionType_IsValid(value));
  set_has_session_type();
  session_type_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.GetLatestMsgIdResponse.session_type)
}

// required uint32 session_id = 3;
inline bool GetLatestMsgIdResponse::has_session_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetLatestMsgIdResponse::set_has_session_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetLatestMsgIdResponse::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetLatestMsgIdResponse::clear_session_id() {
  session_id_ = 0u;
  clear_has_session_id();
}
inline ::google::protobuf::uint32 GetLatestMsgIdResponse::session_id() const {
  // @@protoc_insertion_point(field_get:Im.Message.GetLatestMsgIdResponse.session_id)
  return session_id_;
}
inline void GetLatestMsgIdResponse::set_session_id(::google::protobuf::uint32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.GetLatestMsgIdResponse.session_id)
}

// required uint32 latest_msg_id = 4;
inline bool GetLatestMsgIdResponse::has_latest_msg_id() const {
  return (_has_bits_[0] & 0x00000008u) != 0;
}
inline void GetLatestMsgIdResponse::set_has_latest_msg_id() {
  _has_bits_[0] |= 0x00000008u;
}
inline void GetLatestMsgIdResponse::clear_has_latest_msg_id() {
  _has_bits_[0] &= ~0x00000008u;
}
inline void GetLatestMsgIdResponse::clear_latest_msg_id() {
  latest_msg_id_ = 0u;
  clear_has_latest_msg_id();
}
inline ::google::protobuf::uint32 GetLatestMsgIdResponse::latest_msg_id() const {
  // @@protoc_insertion_point(field_get:Im.Message.GetLatestMsgIdResponse.latest_msg_id)
  return latest_msg_id_;
}
inline void GetLatestMsgIdResponse::set_latest_msg_id(::google::protobuf::uint32 value) {
  set_has_latest_msg_id();
  latest_msg_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.GetLatestMsgIdResponse.latest_msg_id)
}

// optional bytes attach_data = 5;
inline bool GetLatestMsgIdResponse::has_attach_data() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetLatestMsgIdResponse::set_has_attach_data() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetLatestMsgIdResponse::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetLatestMsgIdResponse::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& GetLatestMsgIdResponse::attach_data() const {
  // @@protoc_insertion_point(field_get:Im.Message.GetLatestMsgIdResponse.attach_data)
  return *attach_data_;
}
inline void GetLatestMsgIdResponse::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:Im.Message.GetLatestMsgIdResponse.attach_data)
}
inline void GetLatestMsgIdResponse::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Im.Message.GetLatestMsgIdResponse.attach_data)
}
inline void GetLatestMsgIdResponse::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Im.Message.GetLatestMsgIdResponse.attach_data)
}
inline ::std::string* GetLatestMsgIdResponse::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Im.Message.GetLatestMsgIdResponse.attach_data)
  return attach_data_;
}
inline ::std::string* GetLatestMsgIdResponse::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetLatestMsgIdResponse::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Im.Message.GetLatestMsgIdResponse.attach_data)
}

// -------------------------------------------------------------------

// GetMsgByIdRequest

// required uint32 user_id = 1;
inline bool GetMsgByIdRequest::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetMsgByIdRequest::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetMsgByIdRequest::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetMsgByIdRequest::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 GetMsgByIdRequest::user_id() const {
  // @@protoc_insertion_point(field_get:Im.Message.GetMsgByIdRequest.user_id)
  return user_id_;
}
inline void GetMsgByIdRequest::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.GetMsgByIdRequest.user_id)
}

// required .Im.Base.SessionType session_type = 2;
inline bool GetMsgByIdRequest::has_session_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetMsgByIdRequest::set_has_session_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetMsgByIdRequest::clear_has_session_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetMsgByIdRequest::clear_session_type() {
  session_type_ = 1;
  clear_has_session_type();
}
inline ::Im::Base::SessionType GetMsgByIdRequest::session_type() const {
  // @@protoc_insertion_point(field_get:Im.Message.GetMsgByIdRequest.session_type)
  return static_cast< ::Im::Base::SessionType >(session_type_);
}
inline void GetMsgByIdRequest::set_session_type(::Im::Base::SessionType value) {
  assert(::Im::Base::SessionType_IsValid(value));
  set_has_session_type();
  session_type_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.GetMsgByIdRequest.session_type)
}

// required uint32 session_id = 3;
inline bool GetMsgByIdRequest::has_session_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetMsgByIdRequest::set_has_session_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetMsgByIdRequest::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetMsgByIdRequest::clear_session_id() {
  session_id_ = 0u;
  clear_has_session_id();
}
inline ::google::protobuf::uint32 GetMsgByIdRequest::session_id() const {
  // @@protoc_insertion_point(field_get:Im.Message.GetMsgByIdRequest.session_id)
  return session_id_;
}
inline void GetMsgByIdRequest::set_session_id(::google::protobuf::uint32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.GetMsgByIdRequest.session_id)
}

// repeated uint32 msg_id_list = 4;
inline int GetMsgByIdRequest::msg_id_list_size() const {
  return msg_id_list_.size();
}
inline void GetMsgByIdRequest::clear_msg_id_list() {
  msg_id_list_.Clear();
}
inline ::google::protobuf::uint32 GetMsgByIdRequest::msg_id_list(int index) const {
  // @@protoc_insertion_point(field_get:Im.Message.GetMsgByIdRequest.msg_id_list)
  return msg_id_list_.Get(index);
}
inline void GetMsgByIdRequest::set_msg_id_list(int index, ::google::protobuf::uint32 value) {
  msg_id_list_.Set(index, value);
  // @@protoc_insertion_point(field_set:Im.Message.GetMsgByIdRequest.msg_id_list)
}
inline void GetMsgByIdRequest::add_msg_id_list(::google::protobuf::uint32 value) {
  msg_id_list_.Add(value);
  // @@protoc_insertion_point(field_add:Im.Message.GetMsgByIdRequest.msg_id_list)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >&
GetMsgByIdRequest::msg_id_list() const {
  // @@protoc_insertion_point(field_list:Im.Message.GetMsgByIdRequest.msg_id_list)
  return msg_id_list_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::uint32 >*
GetMsgByIdRequest::mutable_msg_id_list() {
  // @@protoc_insertion_point(field_mutable_list:Im.Message.GetMsgByIdRequest.msg_id_list)
  return &msg_id_list_;
}

// optional bytes attach_data = 5;
inline bool GetMsgByIdRequest::has_attach_data() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetMsgByIdRequest::set_has_attach_data() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetMsgByIdRequest::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetMsgByIdRequest::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& GetMsgByIdRequest::attach_data() const {
  // @@protoc_insertion_point(field_get:Im.Message.GetMsgByIdRequest.attach_data)
  return *attach_data_;
}
inline void GetMsgByIdRequest::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:Im.Message.GetMsgByIdRequest.attach_data)
}
inline void GetMsgByIdRequest::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Im.Message.GetMsgByIdRequest.attach_data)
}
inline void GetMsgByIdRequest::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Im.Message.GetMsgByIdRequest.attach_data)
}
inline ::std::string* GetMsgByIdRequest::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Im.Message.GetMsgByIdRequest.attach_data)
  return attach_data_;
}
inline ::std::string* GetMsgByIdRequest::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetMsgByIdRequest::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Im.Message.GetMsgByIdRequest.attach_data)
}

// -------------------------------------------------------------------

// GetMsgByIdResponse

// required uint32 user_id = 1;
inline bool GetMsgByIdResponse::has_user_id() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void GetMsgByIdResponse::set_has_user_id() {
  _has_bits_[0] |= 0x00000001u;
}
inline void GetMsgByIdResponse::clear_has_user_id() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void GetMsgByIdResponse::clear_user_id() {
  user_id_ = 0u;
  clear_has_user_id();
}
inline ::google::protobuf::uint32 GetMsgByIdResponse::user_id() const {
  // @@protoc_insertion_point(field_get:Im.Message.GetMsgByIdResponse.user_id)
  return user_id_;
}
inline void GetMsgByIdResponse::set_user_id(::google::protobuf::uint32 value) {
  set_has_user_id();
  user_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.GetMsgByIdResponse.user_id)
}

// required .Im.Base.SessionType session_type = 2;
inline bool GetMsgByIdResponse::has_session_type() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void GetMsgByIdResponse::set_has_session_type() {
  _has_bits_[0] |= 0x00000002u;
}
inline void GetMsgByIdResponse::clear_has_session_type() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void GetMsgByIdResponse::clear_session_type() {
  session_type_ = 1;
  clear_has_session_type();
}
inline ::Im::Base::SessionType GetMsgByIdResponse::session_type() const {
  // @@protoc_insertion_point(field_get:Im.Message.GetMsgByIdResponse.session_type)
  return static_cast< ::Im::Base::SessionType >(session_type_);
}
inline void GetMsgByIdResponse::set_session_type(::Im::Base::SessionType value) {
  assert(::Im::Base::SessionType_IsValid(value));
  set_has_session_type();
  session_type_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.GetMsgByIdResponse.session_type)
}

// required uint32 session_id = 3;
inline bool GetMsgByIdResponse::has_session_id() const {
  return (_has_bits_[0] & 0x00000004u) != 0;
}
inline void GetMsgByIdResponse::set_has_session_id() {
  _has_bits_[0] |= 0x00000004u;
}
inline void GetMsgByIdResponse::clear_has_session_id() {
  _has_bits_[0] &= ~0x00000004u;
}
inline void GetMsgByIdResponse::clear_session_id() {
  session_id_ = 0u;
  clear_has_session_id();
}
inline ::google::protobuf::uint32 GetMsgByIdResponse::session_id() const {
  // @@protoc_insertion_point(field_get:Im.Message.GetMsgByIdResponse.session_id)
  return session_id_;
}
inline void GetMsgByIdResponse::set_session_id(::google::protobuf::uint32 value) {
  set_has_session_id();
  session_id_ = value;
  // @@protoc_insertion_point(field_set:Im.Message.GetMsgByIdResponse.session_id)
}

// repeated .Im.Base.MsgInfo msg_info_list = 4;
inline int GetMsgByIdResponse::msg_info_list_size() const {
  return msg_info_list_.size();
}
inline void GetMsgByIdResponse::clear_msg_info_list() {
  msg_info_list_.Clear();
}
inline const ::Im::Base::MsgInfo& GetMsgByIdResponse::msg_info_list(int index) const {
  // @@protoc_insertion_point(field_get:Im.Message.GetMsgByIdResponse.msg_info_list)
  return msg_info_list_.Get(index);
}
inline ::Im::Base::MsgInfo* GetMsgByIdResponse::mutable_msg_info_list(int index) {
  // @@protoc_insertion_point(field_mutable:Im.Message.GetMsgByIdResponse.msg_info_list)
  return msg_info_list_.Mutable(index);
}
inline ::Im::Base::MsgInfo* GetMsgByIdResponse::add_msg_info_list() {
  // @@protoc_insertion_point(field_add:Im.Message.GetMsgByIdResponse.msg_info_list)
  return msg_info_list_.Add();
}
inline const ::google::protobuf::RepeatedPtrField< ::Im::Base::MsgInfo >&
GetMsgByIdResponse::msg_info_list() const {
  // @@protoc_insertion_point(field_list:Im.Message.GetMsgByIdResponse.msg_info_list)
  return msg_info_list_;
}
inline ::google::protobuf::RepeatedPtrField< ::Im::Base::MsgInfo >*
GetMsgByIdResponse::mutable_msg_info_list() {
  // @@protoc_insertion_point(field_mutable_list:Im.Message.GetMsgByIdResponse.msg_info_list)
  return &msg_info_list_;
}

// optional bytes attach_data = 5;
inline bool GetMsgByIdResponse::has_attach_data() const {
  return (_has_bits_[0] & 0x00000010u) != 0;
}
inline void GetMsgByIdResponse::set_has_attach_data() {
  _has_bits_[0] |= 0x00000010u;
}
inline void GetMsgByIdResponse::clear_has_attach_data() {
  _has_bits_[0] &= ~0x00000010u;
}
inline void GetMsgByIdResponse::clear_attach_data() {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_->clear();
  }
  clear_has_attach_data();
}
inline const ::std::string& GetMsgByIdResponse::attach_data() const {
  // @@protoc_insertion_point(field_get:Im.Message.GetMsgByIdResponse.attach_data)
  return *attach_data_;
}
inline void GetMsgByIdResponse::set_attach_data(const ::std::string& value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set:Im.Message.GetMsgByIdResponse.attach_data)
}
inline void GetMsgByIdResponse::set_attach_data(const char* value) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(value);
  // @@protoc_insertion_point(field_set_char:Im.Message.GetMsgByIdResponse.attach_data)
}
inline void GetMsgByIdResponse::set_attach_data(const void* value, size_t size) {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  attach_data_->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:Im.Message.GetMsgByIdResponse.attach_data)
}
inline ::std::string* GetMsgByIdResponse::mutable_attach_data() {
  set_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    attach_data_ = new ::std::string;
  }
  // @@protoc_insertion_point(field_mutable:Im.Message.GetMsgByIdResponse.attach_data)
  return attach_data_;
}
inline ::std::string* GetMsgByIdResponse::release_attach_data() {
  clear_has_attach_data();
  if (attach_data_ == &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    return NULL;
  } else {
    ::std::string* temp = attach_data_;
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    return temp;
  }
}
inline void GetMsgByIdResponse::set_allocated_attach_data(::std::string* attach_data) {
  if (attach_data_ != &::google::protobuf::internal::GetEmptyStringAlreadyInited()) {
    delete attach_data_;
  }
  if (attach_data) {
    set_has_attach_data();
    attach_data_ = attach_data;
  } else {
    clear_has_attach_data();
    attach_data_ = const_cast< ::std::string*>(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
  }
  // @@protoc_insertion_point(field_set_allocated:Im.Message.GetMsgByIdResponse.attach_data)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Message
}  // namespace Im

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Im_2eMessage_2eproto__INCLUDED
