// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: Im.Query.proto

#ifndef PROTOBUF_Im_2eQuery_2eproto__INCLUDED
#define PROTOBUF_Im_2eQuery_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 2006000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 2006001 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>
#include <google/protobuf/extension_set.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)

namespace Im {

// Internal implementation detail -- do not call these.
void  protobuf_AddDesc_Im_2eQuery_2eproto();
void protobuf_AssignDesc_Im_2eQuery_2eproto();
void protobuf_ShutdownFile_Im_2eQuery_2eproto();

class Query;

// ===================================================================

class Query : public ::google::protobuf::Message {
 public:
  Query();
  virtual ~Query();

  Query(const Query& from);

  inline Query& operator=(const Query& from) {
    CopyFrom(from);
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const {
    return _unknown_fields_;
  }

  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields() {
    return &_unknown_fields_;
  }

  static const ::google::protobuf::Descriptor* descriptor();
  static const Query& default_instance();

  void Swap(Query* other);

  // implements Message ----------------------------------------------

  Query* New() const;
  void CopyFrom(const ::google::protobuf::Message& from);
  void MergeFrom(const ::google::protobuf::Message& from);
  void CopyFrom(const Query& from);
  void MergeFrom(const Query& from);
  void Clear();
  bool IsInitialized() const;

  int ByteSize() const;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input);
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const;
  ::google::protobuf::uint8* SerializeWithCachedSizesToArray(::google::protobuf::uint8* output) const;
  int GetCachedSize() const { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const;
  public:
  ::google::protobuf::Metadata GetMetadata() const;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // required int32 type_name = 1;
  inline bool has_type_name() const;
  inline void clear_type_name();
  static const int kTypeNameFieldNumber = 1;
  inline ::google::protobuf::int32 type_name() const;
  inline void set_type_name(::google::protobuf::int32 value);

  // required int32 len = 2;
  inline bool has_len() const;
  inline void clear_len();
  static const int kLenFieldNumber = 2;
  inline ::google::protobuf::int32 len() const;
  inline void set_len(::google::protobuf::int32 value);

  // @@protoc_insertion_point(class_scope:Im.Query)
 private:
  inline void set_has_type_name();
  inline void clear_has_type_name();
  inline void set_has_len();
  inline void clear_has_len();

  ::google::protobuf::UnknownFieldSet _unknown_fields_;

  ::google::protobuf::uint32 _has_bits_[1];
  mutable int _cached_size_;
  ::google::protobuf::int32 type_name_;
  ::google::protobuf::int32 len_;
  friend void  protobuf_AddDesc_Im_2eQuery_2eproto();
  friend void protobuf_AssignDesc_Im_2eQuery_2eproto();
  friend void protobuf_ShutdownFile_Im_2eQuery_2eproto();

  void InitAsDefaultInstance();
  static Query* default_instance_;
};
// ===================================================================


// ===================================================================

// Query

// required int32 type_name = 1;
inline bool Query::has_type_name() const {
  return (_has_bits_[0] & 0x00000001u) != 0;
}
inline void Query::set_has_type_name() {
  _has_bits_[0] |= 0x00000001u;
}
inline void Query::clear_has_type_name() {
  _has_bits_[0] &= ~0x00000001u;
}
inline void Query::clear_type_name() {
  type_name_ = 0;
  clear_has_type_name();
}
inline ::google::protobuf::int32 Query::type_name() const {
  // @@protoc_insertion_point(field_get:Im.Query.type_name)
  return type_name_;
}
inline void Query::set_type_name(::google::protobuf::int32 value) {
  set_has_type_name();
  type_name_ = value;
  // @@protoc_insertion_point(field_set:Im.Query.type_name)
}

// required int32 len = 2;
inline bool Query::has_len() const {
  return (_has_bits_[0] & 0x00000002u) != 0;
}
inline void Query::set_has_len() {
  _has_bits_[0] |= 0x00000002u;
}
inline void Query::clear_has_len() {
  _has_bits_[0] &= ~0x00000002u;
}
inline void Query::clear_len() {
  len_ = 0;
  clear_has_len();
}
inline ::google::protobuf::int32 Query::len() const {
  // @@protoc_insertion_point(field_get:Im.Query.len)
  return len_;
}
inline void Query::set_len(::google::protobuf::int32 value) {
  set_has_len();
  len_ = value;
  // @@protoc_insertion_point(field_set:Im.Query.len)
}


// @@protoc_insertion_point(namespace_scope)

}  // namespace Im

#ifndef SWIG
namespace google {
namespace protobuf {


}  // namespace google
}  // namespace protobuf
#endif  // SWIG

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_Im_2eQuery_2eproto__INCLUDED
